#pragma once

// CHANGE: added <fstream> for new std::ifstream member "instream":
#include <fstream>
#include <iostream>
#include <map>
#include <string>

// Generated by bison:
#include "sysy_parser.hh"

// CHANGE: replaced `#define YY_DECL ...` here with #include of new
// lexer class:
#include "sysyFlexLexer.hh"

// Conducting the whole scanning and parsing of Calc++.
class sysy_driver {
public:
  sysy_driver();
  virtual ~sysy_driver();

  std::map<std::string, int> variables;

  int result;

  // CHANGE: add lexer object as a member
  sysyFlexLexer lexer;

  // CHANGE: add ifstream object as a member
  std::ifstream instream;

  // Handling the scanner.
  void scan_begin();
  void scan_end();
  bool trace_scanning;

  // Run the parser on file F.
  // Return 0 on success.
  SyntaxCompUnit *parse(const std::string &f);
  // The name of the file being parsed.
  // Used later to pass the file name to the location tracker.
  std::string file;
  // Whether parser traces should be generated.
  bool trace_parsing;

  // std::istream poss_stream;
  // preprocess
  std::string preprocess();

  // Error handling.
  void error(const yy::location &l, const std::string &m);
  void error(const std::string &m);

  SyntaxCompUnit *root = nullptr;
};
