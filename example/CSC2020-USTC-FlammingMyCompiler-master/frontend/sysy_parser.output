Terminals unused in grammar

   ERROR
   LETTER
   EOL
   COMMENT
   BLANK


State 159 conflicts: 1 shift/reduce


Grammar

    0 $accept: Begin $end

    1 Begin: CompUnit END

    2 CompUnit: CompUnit DeclDef
    3         | DeclDef

    4 DeclDef: ConstDecl
    5        | VarDecl
    6        | FuncDef

    7 ConstDecl: CONST DefType ConstDefList SEMICOLON

    8 ConstDefList: ConstDefList COMMA ConstDef
    9             | ConstDef

   10 ConstDef: IDENTIFIER ArrayConstExpList ASSIN ConstInitVal

   11 ArrayConstExpList: ArrayConstExpList LBRACKET ConstExp RBRACKET
   12                  | %empty

   13 ConstInitVal: ConstExp
   14             | LBRACE ConstInitValList RBRACE
   15             | LBRACE RBRACE

   16 ConstInitValList: ConstInitValList COMMA ConstInitVal
   17                 | ConstInitVal

   18 VarDecl: DefType VarDefList SEMICOLON

   19 VarDefList: VarDefList COMMA VarDef
   20           | VarDef

   21 VarDef: IDENTIFIER ArrayConstExpList
   22       | IDENTIFIER ArrayConstExpList ASSIN InitVal

   23 InitVal: Exp
   24        | LBRACE RBRACE
   25        | LBRACE InitValList RBRACE

   26 InitValList: InitValList COMMA InitVal
   27            | InitVal

   28 FuncDef: DefType IDENTIFIER LPARENTHESE RPARENTHESE Block
   29        | DefType IDENTIFIER LPARENTHESE FuncFParamList RPARENTHESE Block

   30 DefType: VOID
   31        | INT

   32 FuncFParamList: FuncFParamList COMMA FuncFParam
   33               | FuncFParam

   34 FuncFParam: DefType IDENTIFIER ParamArrayExpList
   35           | DefType IDENTIFIER

   36 ParamArrayExpList: ParamArrayExpList LBRACKET Exp RBRACKET
   37                  | ARRAY

   38 Block: LBRACE BlockItemList RBRACE

   39 BlockItemList: BlockItemList BlockItem
   40              | %empty

   41 BlockItem: ConstDecl
   42          | VarDecl
   43          | Stmt

   44 Stmt: AssignStmt
   45     | Exp SEMICOLON
   46     | SEMICOLON
   47     | Block
   48     | SelectStmt
   49     | IterationStmt
   50     | BreakStmt
   51     | ContinueStmt
   52     | ReturnStmt

   53 BreakStmt: BREAK SEMICOLON

   54 ContinueStmt: CONTINUE SEMICOLON

   55 AssignStmt: LVal ASSIN Exp SEMICOLON

   56 SelectStmt: IF LPARENTHESE Cond RPARENTHESE Stmt
   57           | IF LPARENTHESE Cond RPARENTHESE Stmt ELSE Stmt

   58 IterationStmt: WHILE LPARENTHESE Cond RPARENTHESE Stmt

   59 ReturnStmt: RETURN Exp SEMICOLON
   60           | RETURN SEMICOLON

   61 Exp: AddExp

   62 Cond: LOrExp

   63 LVal: IDENTIFIER ArrayExpList

   64 ArrayExpList: ArrayExpList LBRACKET Exp RBRACKET
   65             | %empty

   66 PrimaryExp: LPARENTHESE Exp RPARENTHESE
   67           | LVal
   68           | Number

   69 Number: NUMBER

   70 UnaryExp: PrimaryExp
   71         | Callee
   72         | UnaryOp UnaryExp

   73 Callee: IDENTIFIER LPARENTHESE ExpList RPARENTHESE
   74       | IDENTIFIER LPARENTHESE RPARENTHESE

   75 UnaryOp: ADD
   76        | SUB
   77        | NOT

   78 ExpList: ExpList COMMA Exp
   79        | Exp

   80 MulExp: UnaryExp
   81       | MulExp MUL UnaryExp
   82       | MulExp DIV UnaryExp
   83       | MulExp MOD UnaryExp

   84 AddExp: MulExp
   85       | AddExp ADD MulExp
   86       | AddExp SUB MulExp

   87 RelExp: AddExp
   88       | RelExp LT AddExp
   89       | RelExp GT AddExp
   90       | RelExp LTE AddExp
   91       | RelExp GTE AddExp

   92 EqExp: RelExp
   93      | EqExp EQ RelExp
   94      | EqExp NEQ RelExp

   95 LAndExp: EqExp
   96        | LAndExp AND EqExp

   97 LOrExp: LAndExp
   98       | LOrExp OR LAndExp

   99 ConstExp: AddExp


Terminals, with rules where they appear

$end (0) 0
error (256)
ERROR (258)
ADD (259) 75 85
SUB (260) 76 86
MUL (261) 81
DIV (262) 82
LT (263) 88
LTE (264) 90
GT (265) 89
GTE (266) 91
EQ (267) 93
NEQ (268) 94
ASSIN (269) 10 22 55
SEMICOLON (270) 7 18 45 46 53 54 55 59 60
COMMA (271) 8 16 19 26 32 78
LPARENTHESE (272) 28 29 56 57 58 66 73 74
RPARENTHESE (273) 28 29 56 57 58 66 73 74
LBRACKET (274) 11 36 64
RBRACKET (275) 11 36 64
LBRACE (276) 14 15 24 25 38
RBRACE (277) 14 15 24 25 38
ELSE (278) 57
IF (279) 56 57
INT (280) 31
RETURN (281) 59 60
VOID (282) 30
WHILE (283) 58
IDENTIFIER <std::string> (284) 10 21 22 28 29 34 35 63 73 74
NUMBER <int> (285) 69
ARRAY (286) 37
LETTER (287)
EOL (288)
COMMENT (289)
BLANK (290)
CONST (291) 7
BREAK (292) 53
CONTINUE (293) 54
NOT (294) 77
AND (295) 96
OR (296) 98
MOD (297) 83
END (299) 1


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
Begin (45)
    on left: 1, on right: 0
CompUnit <SyntaxCompUnit*> (46)
    on left: 2 3, on right: 1 2
DeclDef <SyntaxDeclDef*> (47)
    on left: 4 5 6, on right: 2 3
ConstDecl <SyntaxConstDecl*> (48)
    on left: 7, on right: 4 41
ConstDefList <SyntaxConstDefList*> (49)
    on left: 8 9, on right: 7 8
ConstDef <SyntaxConstDef*> (50)
    on left: 10, on right: 8 9
ArrayConstExpList <SyntaxArrayConstExpList*> (51)
    on left: 11 12, on right: 10 11 21 22
ConstInitVal <SyntaxConstInitVal*> (52)
    on left: 13 14 15, on right: 10 16 17
ConstInitValList <SyntaxConstInitValList*> (53)
    on left: 16 17, on right: 14 16
VarDecl <SyntaxVarDecl*> (54)
    on left: 18, on right: 5 42
VarDefList <SyntaxVarDefList*> (55)
    on left: 19 20, on right: 18 19
VarDef <SyntaxVarDef*> (56)
    on left: 21 22, on right: 19 20
InitVal <SyntaxInitVal*> (57)
    on left: 23 24 25, on right: 22 26 27
InitValList <SyntaxInitValList*> (58)
    on left: 26 27, on right: 25 26
FuncDef <SyntaxFuncDef*> (59)
    on left: 28 29, on right: 6
DefType <type_specifier> (60)
    on left: 30 31, on right: 7 18 28 29 34 35
FuncFParamList <SyntaxFuncFParamList*> (61)
    on left: 32 33, on right: 29 32
FuncFParam <SyntaxFuncFParam*> (62)
    on left: 34 35, on right: 32 33
ParamArrayExpList <SyntaxParamArrayExpList*> (63)
    on left: 36 37, on right: 34 36
Block <SyntaxBlock*> (64)
    on left: 38, on right: 28 29 47
BlockItemList <SyntaxBlockItemList*> (65)
    on left: 39 40, on right: 38 39
BlockItem <SyntaxBlockItem*> (66)
    on left: 41 42 43, on right: 39
Stmt <SyntaxStmt*> (67)
    on left: 44 45 46 47 48 49 50 51 52, on right: 43 56 57 58
BreakStmt <SyntaxBreakStmt*> (68)
    on left: 53, on right: 50
ContinueStmt <SyntaxContinueStmt*> (69)
    on left: 54, on right: 51
AssignStmt <SyntaxAssignStmt*> (70)
    on left: 55, on right: 44
SelectStmt <SyntaxSelectStmt*> (71)
    on left: 56 57, on right: 48
IterationStmt <SyntaxIterationStmt*> (72)
    on left: 58, on right: 49
ReturnStmt <SyntaxReturnStmt*> (73)
    on left: 59 60, on right: 52
Exp <SyntaxExp*> (74)
    on left: 61, on right: 23 36 45 55 59 64 66 78 79
Cond <SyntaxCond*> (75)
    on left: 62, on right: 56 57 58
LVal <SyntaxLVal*> (76)
    on left: 63, on right: 55 67
ArrayExpList <SyntaxArrayExpList*> (77)
    on left: 64 65, on right: 63 64
PrimaryExp <SyntaxPrimaryExp*> (78)
    on left: 66 67 68, on right: 70
Number <SyntaxNumber*> (79)
    on left: 69, on right: 68
UnaryExp <SyntaxUnaryExp*> (80)
    on left: 70 71 72, on right: 72 80 81 82 83
Callee <SyntaxCallee*> (81)
    on left: 73 74, on right: 71
UnaryOp <unaryop> (82)
    on left: 75 76 77, on right: 72
ExpList <SyntaxExpList*> (83)
    on left: 78 79, on right: 73 78
MulExp <SyntaxMulExp*> (84)
    on left: 80 81 82 83, on right: 81 82 83 84 85 86
AddExp <SyntaxAddExp*> (85)
    on left: 84 85 86, on right: 61 85 86 87 88 89 90 91 99
RelExp <SyntaxRelExp*> (86)
    on left: 87 88 89 90 91, on right: 88 89 90 91 92 93 94
EqExp <SyntaxEqExp*> (87)
    on left: 92 93 94, on right: 93 94 95 96
LAndExp <SyntaxLAndExp*> (88)
    on left: 95 96, on right: 96 97 98
LOrExp <SyntaxLOrExp*> (89)
    on left: 97 98, on right: 62 98
ConstExp <SyntaxConstExp*> (90)
    on left: 99, on right: 11 13


State 0

    0 $accept: . Begin $end

    INT    shift, and go to state 1
    VOID   shift, and go to state 2
    CONST  shift, and go to state 3

    Begin      go to state 4
    CompUnit   go to state 5
    DeclDef    go to state 6
    ConstDecl  go to state 7
    VarDecl    go to state 8
    FuncDef    go to state 9
    DefType    go to state 10


State 1

   31 DefType: INT .

    $default  reduce using rule 31 (DefType)


State 2

   30 DefType: VOID .

    $default  reduce using rule 30 (DefType)


State 3

    7 ConstDecl: CONST . DefType ConstDefList SEMICOLON

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    DefType  go to state 11


State 4

    0 $accept: Begin . $end

    $end  shift, and go to state 12


State 5

    1 Begin: CompUnit . END
    2 CompUnit: CompUnit . DeclDef

    END    shift, and go to state 13
    INT    shift, and go to state 1
    VOID   shift, and go to state 2
    CONST  shift, and go to state 3

    DeclDef    go to state 14
    ConstDecl  go to state 7
    VarDecl    go to state 8
    FuncDef    go to state 9
    DefType    go to state 10


State 6

    3 CompUnit: DeclDef .

    $default  reduce using rule 3 (CompUnit)


State 7

    4 DeclDef: ConstDecl .

    $default  reduce using rule 4 (DeclDef)


State 8

    5 DeclDef: VarDecl .

    $default  reduce using rule 5 (DeclDef)


State 9

    6 DeclDef: FuncDef .

    $default  reduce using rule 6 (DeclDef)


State 10

   18 VarDecl: DefType . VarDefList SEMICOLON
   28 FuncDef: DefType . IDENTIFIER LPARENTHESE RPARENTHESE Block
   29        | DefType . IDENTIFIER LPARENTHESE FuncFParamList RPARENTHESE Block

    IDENTIFIER  shift, and go to state 15

    VarDefList  go to state 16
    VarDef      go to state 17


State 11

    7 ConstDecl: CONST DefType . ConstDefList SEMICOLON

    IDENTIFIER  shift, and go to state 18

    ConstDefList  go to state 19
    ConstDef      go to state 20


State 12

    0 $accept: Begin $end .

    $default  accept


State 13

    1 Begin: CompUnit END .

    $default  reduce using rule 1 (Begin)


State 14

    2 CompUnit: CompUnit DeclDef .

    $default  reduce using rule 2 (CompUnit)


State 15

   21 VarDef: IDENTIFIER . ArrayConstExpList
   22       | IDENTIFIER . ArrayConstExpList ASSIN InitVal
   28 FuncDef: DefType IDENTIFIER . LPARENTHESE RPARENTHESE Block
   29        | DefType IDENTIFIER . LPARENTHESE FuncFParamList RPARENTHESE Block

    LPARENTHESE  shift, and go to state 21

    $default  reduce using rule 12 (ArrayConstExpList)

    ArrayConstExpList  go to state 22


State 16

   18 VarDecl: DefType VarDefList . SEMICOLON
   19 VarDefList: VarDefList . COMMA VarDef

    SEMICOLON  shift, and go to state 23
    COMMA      shift, and go to state 24


State 17

   20 VarDefList: VarDef .

    $default  reduce using rule 20 (VarDefList)


State 18

   10 ConstDef: IDENTIFIER . ArrayConstExpList ASSIN ConstInitVal

    $default  reduce using rule 12 (ArrayConstExpList)

    ArrayConstExpList  go to state 25


State 19

    7 ConstDecl: CONST DefType ConstDefList . SEMICOLON
    8 ConstDefList: ConstDefList . COMMA ConstDef

    SEMICOLON  shift, and go to state 26
    COMMA      shift, and go to state 27


State 20

    9 ConstDefList: ConstDef .

    $default  reduce using rule 9 (ConstDefList)


State 21

   28 FuncDef: DefType IDENTIFIER LPARENTHESE . RPARENTHESE Block
   29        | DefType IDENTIFIER LPARENTHESE . FuncFParamList RPARENTHESE Block

    RPARENTHESE  shift, and go to state 28
    INT          shift, and go to state 1
    VOID         shift, and go to state 2

    DefType         go to state 29
    FuncFParamList  go to state 30
    FuncFParam      go to state 31


State 22

   11 ArrayConstExpList: ArrayConstExpList . LBRACKET ConstExp RBRACKET
   21 VarDef: IDENTIFIER ArrayConstExpList .
   22       | IDENTIFIER ArrayConstExpList . ASSIN InitVal

    ASSIN     shift, and go to state 32
    LBRACKET  shift, and go to state 33

    $default  reduce using rule 21 (VarDef)


State 23

   18 VarDecl: DefType VarDefList SEMICOLON .

    $default  reduce using rule 18 (VarDecl)


State 24

   19 VarDefList: VarDefList COMMA . VarDef

    IDENTIFIER  shift, and go to state 34

    VarDef  go to state 35


State 25

   10 ConstDef: IDENTIFIER ArrayConstExpList . ASSIN ConstInitVal
   11 ArrayConstExpList: ArrayConstExpList . LBRACKET ConstExp RBRACKET

    ASSIN     shift, and go to state 36
    LBRACKET  shift, and go to state 33


State 26

    7 ConstDecl: CONST DefType ConstDefList SEMICOLON .

    $default  reduce using rule 7 (ConstDecl)


State 27

    8 ConstDefList: ConstDefList COMMA . ConstDef

    IDENTIFIER  shift, and go to state 18

    ConstDef  go to state 37


State 28

   28 FuncDef: DefType IDENTIFIER LPARENTHESE RPARENTHESE . Block

    LBRACE  shift, and go to state 38

    Block  go to state 39


State 29

   34 FuncFParam: DefType . IDENTIFIER ParamArrayExpList
   35           | DefType . IDENTIFIER

    IDENTIFIER  shift, and go to state 40


State 30

   29 FuncDef: DefType IDENTIFIER LPARENTHESE FuncFParamList . RPARENTHESE Block
   32 FuncFParamList: FuncFParamList . COMMA FuncFParam

    COMMA        shift, and go to state 41
    RPARENTHESE  shift, and go to state 42


State 31

   33 FuncFParamList: FuncFParam .

    $default  reduce using rule 33 (FuncFParamList)


State 32

   22 VarDef: IDENTIFIER ArrayConstExpList ASSIN . InitVal

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    LPARENTHESE  shift, and go to state 45
    LBRACE       shift, and go to state 46
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    InitVal     go to state 50
    Exp         go to state 51
    LVal        go to state 52
    PrimaryExp  go to state 53
    Number      go to state 54
    UnaryExp    go to state 55
    Callee      go to state 56
    UnaryOp     go to state 57
    MulExp      go to state 58
    AddExp      go to state 59


State 33

   11 ArrayConstExpList: ArrayConstExpList LBRACKET . ConstExp RBRACKET

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    LPARENTHESE  shift, and go to state 45
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    LVal        go to state 52
    PrimaryExp  go to state 53
    Number      go to state 54
    UnaryExp    go to state 55
    Callee      go to state 56
    UnaryOp     go to state 57
    MulExp      go to state 58
    AddExp      go to state 60
    ConstExp    go to state 61


State 34

   21 VarDef: IDENTIFIER . ArrayConstExpList
   22       | IDENTIFIER . ArrayConstExpList ASSIN InitVal

    $default  reduce using rule 12 (ArrayConstExpList)

    ArrayConstExpList  go to state 22


State 35

   19 VarDefList: VarDefList COMMA VarDef .

    $default  reduce using rule 19 (VarDefList)


State 36

   10 ConstDef: IDENTIFIER ArrayConstExpList ASSIN . ConstInitVal

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    LPARENTHESE  shift, and go to state 45
    LBRACE       shift, and go to state 62
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    ConstInitVal  go to state 63
    LVal          go to state 52
    PrimaryExp    go to state 53
    Number        go to state 54
    UnaryExp      go to state 55
    Callee        go to state 56
    UnaryOp       go to state 57
    MulExp        go to state 58
    AddExp        go to state 60
    ConstExp      go to state 64


State 37

    8 ConstDefList: ConstDefList COMMA ConstDef .

    $default  reduce using rule 8 (ConstDefList)


State 38

   38 Block: LBRACE . BlockItemList RBRACE

    $default  reduce using rule 40 (BlockItemList)

    BlockItemList  go to state 65


State 39

   28 FuncDef: DefType IDENTIFIER LPARENTHESE RPARENTHESE Block .

    $default  reduce using rule 28 (FuncDef)


State 40

   34 FuncFParam: DefType IDENTIFIER . ParamArrayExpList
   35           | DefType IDENTIFIER .

    ARRAY  shift, and go to state 66

    $default  reduce using rule 35 (FuncFParam)

    ParamArrayExpList  go to state 67


State 41

   32 FuncFParamList: FuncFParamList COMMA . FuncFParam

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    DefType     go to state 29
    FuncFParam  go to state 68


State 42

   29 FuncDef: DefType IDENTIFIER LPARENTHESE FuncFParamList RPARENTHESE . Block

    LBRACE  shift, and go to state 38

    Block  go to state 69


State 43

   75 UnaryOp: ADD .

    $default  reduce using rule 75 (UnaryOp)


State 44

   76 UnaryOp: SUB .

    $default  reduce using rule 76 (UnaryOp)


State 45

   66 PrimaryExp: LPARENTHESE . Exp RPARENTHESE

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    LPARENTHESE  shift, and go to state 45
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    Exp         go to state 70
    LVal        go to state 52
    PrimaryExp  go to state 53
    Number      go to state 54
    UnaryExp    go to state 55
    Callee      go to state 56
    UnaryOp     go to state 57
    MulExp      go to state 58
    AddExp      go to state 59


State 46

   24 InitVal: LBRACE . RBRACE
   25        | LBRACE . InitValList RBRACE

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    LPARENTHESE  shift, and go to state 45
    LBRACE       shift, and go to state 46
    RBRACE       shift, and go to state 71
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    InitVal      go to state 72
    InitValList  go to state 73
    Exp          go to state 51
    LVal         go to state 52
    PrimaryExp   go to state 53
    Number       go to state 54
    UnaryExp     go to state 55
    Callee       go to state 56
    UnaryOp      go to state 57
    MulExp       go to state 58
    AddExp       go to state 59


State 47

   63 LVal: IDENTIFIER . ArrayExpList
   73 Callee: IDENTIFIER . LPARENTHESE ExpList RPARENTHESE
   74       | IDENTIFIER . LPARENTHESE RPARENTHESE

    LPARENTHESE  shift, and go to state 74

    $default  reduce using rule 65 (ArrayExpList)

    ArrayExpList  go to state 75


State 48

   69 Number: NUMBER .

    $default  reduce using rule 69 (Number)


State 49

   77 UnaryOp: NOT .

    $default  reduce using rule 77 (UnaryOp)


State 50

   22 VarDef: IDENTIFIER ArrayConstExpList ASSIN InitVal .

    $default  reduce using rule 22 (VarDef)


State 51

   23 InitVal: Exp .

    $default  reduce using rule 23 (InitVal)


State 52

   67 PrimaryExp: LVal .

    $default  reduce using rule 67 (PrimaryExp)


State 53

   70 UnaryExp: PrimaryExp .

    $default  reduce using rule 70 (UnaryExp)


State 54

   68 PrimaryExp: Number .

    $default  reduce using rule 68 (PrimaryExp)


State 55

   80 MulExp: UnaryExp .

    $default  reduce using rule 80 (MulExp)


State 56

   71 UnaryExp: Callee .

    $default  reduce using rule 71 (UnaryExp)


State 57

   72 UnaryExp: UnaryOp . UnaryExp

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    LPARENTHESE  shift, and go to state 45
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    LVal        go to state 52
    PrimaryExp  go to state 53
    Number      go to state 54
    UnaryExp    go to state 76
    Callee      go to state 56
    UnaryOp     go to state 57


State 58

   81 MulExp: MulExp . MUL UnaryExp
   82       | MulExp . DIV UnaryExp
   83       | MulExp . MOD UnaryExp
   84 AddExp: MulExp .

    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 84 (AddExp)


State 59

   61 Exp: AddExp .
   85 AddExp: AddExp . ADD MulExp
   86       | AddExp . SUB MulExp

    ADD  shift, and go to state 80
    SUB  shift, and go to state 81

    $default  reduce using rule 61 (Exp)


State 60

   85 AddExp: AddExp . ADD MulExp
   86       | AddExp . SUB MulExp
   99 ConstExp: AddExp .

    ADD  shift, and go to state 80
    SUB  shift, and go to state 81

    $default  reduce using rule 99 (ConstExp)


State 61

   11 ArrayConstExpList: ArrayConstExpList LBRACKET ConstExp . RBRACKET

    RBRACKET  shift, and go to state 82


State 62

   14 ConstInitVal: LBRACE . ConstInitValList RBRACE
   15             | LBRACE . RBRACE

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    LPARENTHESE  shift, and go to state 45
    LBRACE       shift, and go to state 62
    RBRACE       shift, and go to state 83
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    ConstInitVal      go to state 84
    ConstInitValList  go to state 85
    LVal              go to state 52
    PrimaryExp        go to state 53
    Number            go to state 54
    UnaryExp          go to state 55
    Callee            go to state 56
    UnaryOp           go to state 57
    MulExp            go to state 58
    AddExp            go to state 60
    ConstExp          go to state 64


State 63

   10 ConstDef: IDENTIFIER ArrayConstExpList ASSIN ConstInitVal .

    $default  reduce using rule 10 (ConstDef)


State 64

   13 ConstInitVal: ConstExp .

    $default  reduce using rule 13 (ConstInitVal)


State 65

   38 Block: LBRACE BlockItemList . RBRACE
   39 BlockItemList: BlockItemList . BlockItem

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    SEMICOLON    shift, and go to state 86
    LPARENTHESE  shift, and go to state 45
    LBRACE       shift, and go to state 38
    RBRACE       shift, and go to state 87
    IF           shift, and go to state 88
    INT          shift, and go to state 1
    RETURN       shift, and go to state 89
    VOID         shift, and go to state 2
    WHILE        shift, and go to state 90
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    CONST        shift, and go to state 3
    BREAK        shift, and go to state 91
    CONTINUE     shift, and go to state 92
    NOT          shift, and go to state 49

    ConstDecl      go to state 93
    VarDecl        go to state 94
    DefType        go to state 95
    Block          go to state 96
    BlockItem      go to state 97
    Stmt           go to state 98
    BreakStmt      go to state 99
    ContinueStmt   go to state 100
    AssignStmt     go to state 101
    SelectStmt     go to state 102
    IterationStmt  go to state 103
    ReturnStmt     go to state 104
    Exp            go to state 105
    LVal           go to state 106
    PrimaryExp     go to state 53
    Number         go to state 54
    UnaryExp       go to state 55
    Callee         go to state 56
    UnaryOp        go to state 57
    MulExp         go to state 58
    AddExp         go to state 59


State 66

   37 ParamArrayExpList: ARRAY .

    $default  reduce using rule 37 (ParamArrayExpList)


State 67

   34 FuncFParam: DefType IDENTIFIER ParamArrayExpList .
   36 ParamArrayExpList: ParamArrayExpList . LBRACKET Exp RBRACKET

    LBRACKET  shift, and go to state 107

    $default  reduce using rule 34 (FuncFParam)


State 68

   32 FuncFParamList: FuncFParamList COMMA FuncFParam .

    $default  reduce using rule 32 (FuncFParamList)


State 69

   29 FuncDef: DefType IDENTIFIER LPARENTHESE FuncFParamList RPARENTHESE Block .

    $default  reduce using rule 29 (FuncDef)


State 70

   66 PrimaryExp: LPARENTHESE Exp . RPARENTHESE

    RPARENTHESE  shift, and go to state 108


State 71

   24 InitVal: LBRACE RBRACE .

    $default  reduce using rule 24 (InitVal)


State 72

   27 InitValList: InitVal .

    $default  reduce using rule 27 (InitValList)


State 73

   25 InitVal: LBRACE InitValList . RBRACE
   26 InitValList: InitValList . COMMA InitVal

    COMMA   shift, and go to state 109
    RBRACE  shift, and go to state 110


State 74

   73 Callee: IDENTIFIER LPARENTHESE . ExpList RPARENTHESE
   74       | IDENTIFIER LPARENTHESE . RPARENTHESE

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    LPARENTHESE  shift, and go to state 45
    RPARENTHESE  shift, and go to state 111
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    Exp         go to state 112
    LVal        go to state 52
    PrimaryExp  go to state 53
    Number      go to state 54
    UnaryExp    go to state 55
    Callee      go to state 56
    UnaryOp     go to state 57
    ExpList     go to state 113
    MulExp      go to state 58
    AddExp      go to state 59


State 75

   63 LVal: IDENTIFIER ArrayExpList .
   64 ArrayExpList: ArrayExpList . LBRACKET Exp RBRACKET

    LBRACKET  shift, and go to state 114

    $default  reduce using rule 63 (LVal)


State 76

   72 UnaryExp: UnaryOp UnaryExp .

    $default  reduce using rule 72 (UnaryExp)


State 77

   81 MulExp: MulExp MUL . UnaryExp

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    LPARENTHESE  shift, and go to state 45
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    LVal        go to state 52
    PrimaryExp  go to state 53
    Number      go to state 54
    UnaryExp    go to state 115
    Callee      go to state 56
    UnaryOp     go to state 57


State 78

   82 MulExp: MulExp DIV . UnaryExp

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    LPARENTHESE  shift, and go to state 45
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    LVal        go to state 52
    PrimaryExp  go to state 53
    Number      go to state 54
    UnaryExp    go to state 116
    Callee      go to state 56
    UnaryOp     go to state 57


State 79

   83 MulExp: MulExp MOD . UnaryExp

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    LPARENTHESE  shift, and go to state 45
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    LVal        go to state 52
    PrimaryExp  go to state 53
    Number      go to state 54
    UnaryExp    go to state 117
    Callee      go to state 56
    UnaryOp     go to state 57


State 80

   85 AddExp: AddExp ADD . MulExp

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    LPARENTHESE  shift, and go to state 45
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    LVal        go to state 52
    PrimaryExp  go to state 53
    Number      go to state 54
    UnaryExp    go to state 55
    Callee      go to state 56
    UnaryOp     go to state 57
    MulExp      go to state 118


State 81

   86 AddExp: AddExp SUB . MulExp

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    LPARENTHESE  shift, and go to state 45
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    LVal        go to state 52
    PrimaryExp  go to state 53
    Number      go to state 54
    UnaryExp    go to state 55
    Callee      go to state 56
    UnaryOp     go to state 57
    MulExp      go to state 119


State 82

   11 ArrayConstExpList: ArrayConstExpList LBRACKET ConstExp RBRACKET .

    $default  reduce using rule 11 (ArrayConstExpList)


State 83

   15 ConstInitVal: LBRACE RBRACE .

    $default  reduce using rule 15 (ConstInitVal)


State 84

   17 ConstInitValList: ConstInitVal .

    $default  reduce using rule 17 (ConstInitValList)


State 85

   14 ConstInitVal: LBRACE ConstInitValList . RBRACE
   16 ConstInitValList: ConstInitValList . COMMA ConstInitVal

    COMMA   shift, and go to state 120
    RBRACE  shift, and go to state 121


State 86

   46 Stmt: SEMICOLON .

    $default  reduce using rule 46 (Stmt)


State 87

   38 Block: LBRACE BlockItemList RBRACE .

    $default  reduce using rule 38 (Block)


State 88

   56 SelectStmt: IF . LPARENTHESE Cond RPARENTHESE Stmt
   57           | IF . LPARENTHESE Cond RPARENTHESE Stmt ELSE Stmt

    LPARENTHESE  shift, and go to state 122


State 89

   59 ReturnStmt: RETURN . Exp SEMICOLON
   60           | RETURN . SEMICOLON

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    SEMICOLON    shift, and go to state 123
    LPARENTHESE  shift, and go to state 45
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    Exp         go to state 124
    LVal        go to state 52
    PrimaryExp  go to state 53
    Number      go to state 54
    UnaryExp    go to state 55
    Callee      go to state 56
    UnaryOp     go to state 57
    MulExp      go to state 58
    AddExp      go to state 59


State 90

   58 IterationStmt: WHILE . LPARENTHESE Cond RPARENTHESE Stmt

    LPARENTHESE  shift, and go to state 125


State 91

   53 BreakStmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 126


State 92

   54 ContinueStmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 127


State 93

   41 BlockItem: ConstDecl .

    $default  reduce using rule 41 (BlockItem)


State 94

   42 BlockItem: VarDecl .

    $default  reduce using rule 42 (BlockItem)


State 95

   18 VarDecl: DefType . VarDefList SEMICOLON

    IDENTIFIER  shift, and go to state 34

    VarDefList  go to state 16
    VarDef      go to state 17


State 96

   47 Stmt: Block .

    $default  reduce using rule 47 (Stmt)


State 97

   39 BlockItemList: BlockItemList BlockItem .

    $default  reduce using rule 39 (BlockItemList)


State 98

   43 BlockItem: Stmt .

    $default  reduce using rule 43 (BlockItem)


State 99

   50 Stmt: BreakStmt .

    $default  reduce using rule 50 (Stmt)


State 100

   51 Stmt: ContinueStmt .

    $default  reduce using rule 51 (Stmt)


State 101

   44 Stmt: AssignStmt .

    $default  reduce using rule 44 (Stmt)


State 102

   48 Stmt: SelectStmt .

    $default  reduce using rule 48 (Stmt)


State 103

   49 Stmt: IterationStmt .

    $default  reduce using rule 49 (Stmt)


State 104

   52 Stmt: ReturnStmt .

    $default  reduce using rule 52 (Stmt)


State 105

   45 Stmt: Exp . SEMICOLON

    SEMICOLON  shift, and go to state 128


State 106

   55 AssignStmt: LVal . ASSIN Exp SEMICOLON
   67 PrimaryExp: LVal .

    ASSIN  shift, and go to state 129

    $default  reduce using rule 67 (PrimaryExp)


State 107

   36 ParamArrayExpList: ParamArrayExpList LBRACKET . Exp RBRACKET

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    LPARENTHESE  shift, and go to state 45
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    Exp         go to state 130
    LVal        go to state 52
    PrimaryExp  go to state 53
    Number      go to state 54
    UnaryExp    go to state 55
    Callee      go to state 56
    UnaryOp     go to state 57
    MulExp      go to state 58
    AddExp      go to state 59


State 108

   66 PrimaryExp: LPARENTHESE Exp RPARENTHESE .

    $default  reduce using rule 66 (PrimaryExp)


State 109

   26 InitValList: InitValList COMMA . InitVal

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    LPARENTHESE  shift, and go to state 45
    LBRACE       shift, and go to state 46
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    InitVal     go to state 131
    Exp         go to state 51
    LVal        go to state 52
    PrimaryExp  go to state 53
    Number      go to state 54
    UnaryExp    go to state 55
    Callee      go to state 56
    UnaryOp     go to state 57
    MulExp      go to state 58
    AddExp      go to state 59


State 110

   25 InitVal: LBRACE InitValList RBRACE .

    $default  reduce using rule 25 (InitVal)


State 111

   74 Callee: IDENTIFIER LPARENTHESE RPARENTHESE .

    $default  reduce using rule 74 (Callee)


State 112

   79 ExpList: Exp .

    $default  reduce using rule 79 (ExpList)


State 113

   73 Callee: IDENTIFIER LPARENTHESE ExpList . RPARENTHESE
   78 ExpList: ExpList . COMMA Exp

    COMMA        shift, and go to state 132
    RPARENTHESE  shift, and go to state 133


State 114

   64 ArrayExpList: ArrayExpList LBRACKET . Exp RBRACKET

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    LPARENTHESE  shift, and go to state 45
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    Exp         go to state 134
    LVal        go to state 52
    PrimaryExp  go to state 53
    Number      go to state 54
    UnaryExp    go to state 55
    Callee      go to state 56
    UnaryOp     go to state 57
    MulExp      go to state 58
    AddExp      go to state 59


State 115

   81 MulExp: MulExp MUL UnaryExp .

    $default  reduce using rule 81 (MulExp)


State 116

   82 MulExp: MulExp DIV UnaryExp .

    $default  reduce using rule 82 (MulExp)


State 117

   83 MulExp: MulExp MOD UnaryExp .

    $default  reduce using rule 83 (MulExp)


State 118

   81 MulExp: MulExp . MUL UnaryExp
   82       | MulExp . DIV UnaryExp
   83       | MulExp . MOD UnaryExp
   85 AddExp: AddExp ADD MulExp .

    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 85 (AddExp)


State 119

   81 MulExp: MulExp . MUL UnaryExp
   82       | MulExp . DIV UnaryExp
   83       | MulExp . MOD UnaryExp
   86 AddExp: AddExp SUB MulExp .

    MUL  shift, and go to state 77
    DIV  shift, and go to state 78
    MOD  shift, and go to state 79

    $default  reduce using rule 86 (AddExp)


State 120

   16 ConstInitValList: ConstInitValList COMMA . ConstInitVal

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    LPARENTHESE  shift, and go to state 45
    LBRACE       shift, and go to state 62
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    ConstInitVal  go to state 135
    LVal          go to state 52
    PrimaryExp    go to state 53
    Number        go to state 54
    UnaryExp      go to state 55
    Callee        go to state 56
    UnaryOp       go to state 57
    MulExp        go to state 58
    AddExp        go to state 60
    ConstExp      go to state 64


State 121

   14 ConstInitVal: LBRACE ConstInitValList RBRACE .

    $default  reduce using rule 14 (ConstInitVal)


State 122

   56 SelectStmt: IF LPARENTHESE . Cond RPARENTHESE Stmt
   57           | IF LPARENTHESE . Cond RPARENTHESE Stmt ELSE Stmt

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    LPARENTHESE  shift, and go to state 45
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    Cond        go to state 136
    LVal        go to state 52
    PrimaryExp  go to state 53
    Number      go to state 54
    UnaryExp    go to state 55
    Callee      go to state 56
    UnaryOp     go to state 57
    MulExp      go to state 58
    AddExp      go to state 137
    RelExp      go to state 138
    EqExp       go to state 139
    LAndExp     go to state 140
    LOrExp      go to state 141


State 123

   60 ReturnStmt: RETURN SEMICOLON .

    $default  reduce using rule 60 (ReturnStmt)


State 124

   59 ReturnStmt: RETURN Exp . SEMICOLON

    SEMICOLON  shift, and go to state 142


State 125

   58 IterationStmt: WHILE LPARENTHESE . Cond RPARENTHESE Stmt

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    LPARENTHESE  shift, and go to state 45
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    Cond        go to state 143
    LVal        go to state 52
    PrimaryExp  go to state 53
    Number      go to state 54
    UnaryExp    go to state 55
    Callee      go to state 56
    UnaryOp     go to state 57
    MulExp      go to state 58
    AddExp      go to state 137
    RelExp      go to state 138
    EqExp       go to state 139
    LAndExp     go to state 140
    LOrExp      go to state 141


State 126

   53 BreakStmt: BREAK SEMICOLON .

    $default  reduce using rule 53 (BreakStmt)


State 127

   54 ContinueStmt: CONTINUE SEMICOLON .

    $default  reduce using rule 54 (ContinueStmt)


State 128

   45 Stmt: Exp SEMICOLON .

    $default  reduce using rule 45 (Stmt)


State 129

   55 AssignStmt: LVal ASSIN . Exp SEMICOLON

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    LPARENTHESE  shift, and go to state 45
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    Exp         go to state 144
    LVal        go to state 52
    PrimaryExp  go to state 53
    Number      go to state 54
    UnaryExp    go to state 55
    Callee      go to state 56
    UnaryOp     go to state 57
    MulExp      go to state 58
    AddExp      go to state 59


State 130

   36 ParamArrayExpList: ParamArrayExpList LBRACKET Exp . RBRACKET

    RBRACKET  shift, and go to state 145


State 131

   26 InitValList: InitValList COMMA InitVal .

    $default  reduce using rule 26 (InitValList)


State 132

   78 ExpList: ExpList COMMA . Exp

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    LPARENTHESE  shift, and go to state 45
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    Exp         go to state 146
    LVal        go to state 52
    PrimaryExp  go to state 53
    Number      go to state 54
    UnaryExp    go to state 55
    Callee      go to state 56
    UnaryOp     go to state 57
    MulExp      go to state 58
    AddExp      go to state 59


State 133

   73 Callee: IDENTIFIER LPARENTHESE ExpList RPARENTHESE .

    $default  reduce using rule 73 (Callee)


State 134

   64 ArrayExpList: ArrayExpList LBRACKET Exp . RBRACKET

    RBRACKET  shift, and go to state 147


State 135

   16 ConstInitValList: ConstInitValList COMMA ConstInitVal .

    $default  reduce using rule 16 (ConstInitValList)


State 136

   56 SelectStmt: IF LPARENTHESE Cond . RPARENTHESE Stmt
   57           | IF LPARENTHESE Cond . RPARENTHESE Stmt ELSE Stmt

    RPARENTHESE  shift, and go to state 148


State 137

   85 AddExp: AddExp . ADD MulExp
   86       | AddExp . SUB MulExp
   87 RelExp: AddExp .

    ADD  shift, and go to state 80
    SUB  shift, and go to state 81

    $default  reduce using rule 87 (RelExp)


State 138

   88 RelExp: RelExp . LT AddExp
   89       | RelExp . GT AddExp
   90       | RelExp . LTE AddExp
   91       | RelExp . GTE AddExp
   92 EqExp: RelExp .

    LT   shift, and go to state 149
    LTE  shift, and go to state 150
    GT   shift, and go to state 151
    GTE  shift, and go to state 152

    $default  reduce using rule 92 (EqExp)


State 139

   93 EqExp: EqExp . EQ RelExp
   94      | EqExp . NEQ RelExp
   95 LAndExp: EqExp .

    EQ   shift, and go to state 153
    NEQ  shift, and go to state 154

    $default  reduce using rule 95 (LAndExp)


State 140

   96 LAndExp: LAndExp . AND EqExp
   97 LOrExp: LAndExp .

    AND  shift, and go to state 155

    $default  reduce using rule 97 (LOrExp)


State 141

   62 Cond: LOrExp .
   98 LOrExp: LOrExp . OR LAndExp

    OR  shift, and go to state 156

    $default  reduce using rule 62 (Cond)


State 142

   59 ReturnStmt: RETURN Exp SEMICOLON .

    $default  reduce using rule 59 (ReturnStmt)


State 143

   58 IterationStmt: WHILE LPARENTHESE Cond . RPARENTHESE Stmt

    RPARENTHESE  shift, and go to state 157


State 144

   55 AssignStmt: LVal ASSIN Exp . SEMICOLON

    SEMICOLON  shift, and go to state 158


State 145

   36 ParamArrayExpList: ParamArrayExpList LBRACKET Exp RBRACKET .

    $default  reduce using rule 36 (ParamArrayExpList)


State 146

   78 ExpList: ExpList COMMA Exp .

    $default  reduce using rule 78 (ExpList)


State 147

   64 ArrayExpList: ArrayExpList LBRACKET Exp RBRACKET .

    $default  reduce using rule 64 (ArrayExpList)


State 148

   56 SelectStmt: IF LPARENTHESE Cond RPARENTHESE . Stmt
   57           | IF LPARENTHESE Cond RPARENTHESE . Stmt ELSE Stmt

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    SEMICOLON    shift, and go to state 86
    LPARENTHESE  shift, and go to state 45
    LBRACE       shift, and go to state 38
    IF           shift, and go to state 88
    RETURN       shift, and go to state 89
    WHILE        shift, and go to state 90
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    BREAK        shift, and go to state 91
    CONTINUE     shift, and go to state 92
    NOT          shift, and go to state 49

    Block          go to state 96
    Stmt           go to state 159
    BreakStmt      go to state 99
    ContinueStmt   go to state 100
    AssignStmt     go to state 101
    SelectStmt     go to state 102
    IterationStmt  go to state 103
    ReturnStmt     go to state 104
    Exp            go to state 105
    LVal           go to state 106
    PrimaryExp     go to state 53
    Number         go to state 54
    UnaryExp       go to state 55
    Callee         go to state 56
    UnaryOp        go to state 57
    MulExp         go to state 58
    AddExp         go to state 59


State 149

   88 RelExp: RelExp LT . AddExp

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    LPARENTHESE  shift, and go to state 45
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    LVal        go to state 52
    PrimaryExp  go to state 53
    Number      go to state 54
    UnaryExp    go to state 55
    Callee      go to state 56
    UnaryOp     go to state 57
    MulExp      go to state 58
    AddExp      go to state 160


State 150

   90 RelExp: RelExp LTE . AddExp

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    LPARENTHESE  shift, and go to state 45
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    LVal        go to state 52
    PrimaryExp  go to state 53
    Number      go to state 54
    UnaryExp    go to state 55
    Callee      go to state 56
    UnaryOp     go to state 57
    MulExp      go to state 58
    AddExp      go to state 161


State 151

   89 RelExp: RelExp GT . AddExp

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    LPARENTHESE  shift, and go to state 45
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    LVal        go to state 52
    PrimaryExp  go to state 53
    Number      go to state 54
    UnaryExp    go to state 55
    Callee      go to state 56
    UnaryOp     go to state 57
    MulExp      go to state 58
    AddExp      go to state 162


State 152

   91 RelExp: RelExp GTE . AddExp

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    LPARENTHESE  shift, and go to state 45
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    LVal        go to state 52
    PrimaryExp  go to state 53
    Number      go to state 54
    UnaryExp    go to state 55
    Callee      go to state 56
    UnaryOp     go to state 57
    MulExp      go to state 58
    AddExp      go to state 163


State 153

   93 EqExp: EqExp EQ . RelExp

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    LPARENTHESE  shift, and go to state 45
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    LVal        go to state 52
    PrimaryExp  go to state 53
    Number      go to state 54
    UnaryExp    go to state 55
    Callee      go to state 56
    UnaryOp     go to state 57
    MulExp      go to state 58
    AddExp      go to state 137
    RelExp      go to state 164


State 154

   94 EqExp: EqExp NEQ . RelExp

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    LPARENTHESE  shift, and go to state 45
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    LVal        go to state 52
    PrimaryExp  go to state 53
    Number      go to state 54
    UnaryExp    go to state 55
    Callee      go to state 56
    UnaryOp     go to state 57
    MulExp      go to state 58
    AddExp      go to state 137
    RelExp      go to state 165


State 155

   96 LAndExp: LAndExp AND . EqExp

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    LPARENTHESE  shift, and go to state 45
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    LVal        go to state 52
    PrimaryExp  go to state 53
    Number      go to state 54
    UnaryExp    go to state 55
    Callee      go to state 56
    UnaryOp     go to state 57
    MulExp      go to state 58
    AddExp      go to state 137
    RelExp      go to state 138
    EqExp       go to state 166


State 156

   98 LOrExp: LOrExp OR . LAndExp

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    LPARENTHESE  shift, and go to state 45
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    NOT          shift, and go to state 49

    LVal        go to state 52
    PrimaryExp  go to state 53
    Number      go to state 54
    UnaryExp    go to state 55
    Callee      go to state 56
    UnaryOp     go to state 57
    MulExp      go to state 58
    AddExp      go to state 137
    RelExp      go to state 138
    EqExp       go to state 139
    LAndExp     go to state 167


State 157

   58 IterationStmt: WHILE LPARENTHESE Cond RPARENTHESE . Stmt

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    SEMICOLON    shift, and go to state 86
    LPARENTHESE  shift, and go to state 45
    LBRACE       shift, and go to state 38
    IF           shift, and go to state 88
    RETURN       shift, and go to state 89
    WHILE        shift, and go to state 90
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    BREAK        shift, and go to state 91
    CONTINUE     shift, and go to state 92
    NOT          shift, and go to state 49

    Block          go to state 96
    Stmt           go to state 168
    BreakStmt      go to state 99
    ContinueStmt   go to state 100
    AssignStmt     go to state 101
    SelectStmt     go to state 102
    IterationStmt  go to state 103
    ReturnStmt     go to state 104
    Exp            go to state 105
    LVal           go to state 106
    PrimaryExp     go to state 53
    Number         go to state 54
    UnaryExp       go to state 55
    Callee         go to state 56
    UnaryOp        go to state 57
    MulExp         go to state 58
    AddExp         go to state 59


State 158

   55 AssignStmt: LVal ASSIN Exp SEMICOLON .

    $default  reduce using rule 55 (AssignStmt)


State 159

   56 SelectStmt: IF LPARENTHESE Cond RPARENTHESE Stmt .
   57           | IF LPARENTHESE Cond RPARENTHESE Stmt . ELSE Stmt

    ELSE  shift, and go to state 169

    ELSE      [reduce using rule 56 (SelectStmt)]
    $default  reduce using rule 56 (SelectStmt)


State 160

   85 AddExp: AddExp . ADD MulExp
   86       | AddExp . SUB MulExp
   88 RelExp: RelExp LT AddExp .

    ADD  shift, and go to state 80
    SUB  shift, and go to state 81

    $default  reduce using rule 88 (RelExp)


State 161

   85 AddExp: AddExp . ADD MulExp
   86       | AddExp . SUB MulExp
   90 RelExp: RelExp LTE AddExp .

    ADD  shift, and go to state 80
    SUB  shift, and go to state 81

    $default  reduce using rule 90 (RelExp)


State 162

   85 AddExp: AddExp . ADD MulExp
   86       | AddExp . SUB MulExp
   89 RelExp: RelExp GT AddExp .

    ADD  shift, and go to state 80
    SUB  shift, and go to state 81

    $default  reduce using rule 89 (RelExp)


State 163

   85 AddExp: AddExp . ADD MulExp
   86       | AddExp . SUB MulExp
   91 RelExp: RelExp GTE AddExp .

    ADD  shift, and go to state 80
    SUB  shift, and go to state 81

    $default  reduce using rule 91 (RelExp)


State 164

   88 RelExp: RelExp . LT AddExp
   89       | RelExp . GT AddExp
   90       | RelExp . LTE AddExp
   91       | RelExp . GTE AddExp
   93 EqExp: EqExp EQ RelExp .

    LT   shift, and go to state 149
    LTE  shift, and go to state 150
    GT   shift, and go to state 151
    GTE  shift, and go to state 152

    $default  reduce using rule 93 (EqExp)


State 165

   88 RelExp: RelExp . LT AddExp
   89       | RelExp . GT AddExp
   90       | RelExp . LTE AddExp
   91       | RelExp . GTE AddExp
   94 EqExp: EqExp NEQ RelExp .

    LT   shift, and go to state 149
    LTE  shift, and go to state 150
    GT   shift, and go to state 151
    GTE  shift, and go to state 152

    $default  reduce using rule 94 (EqExp)


State 166

   93 EqExp: EqExp . EQ RelExp
   94      | EqExp . NEQ RelExp
   96 LAndExp: LAndExp AND EqExp .

    EQ   shift, and go to state 153
    NEQ  shift, and go to state 154

    $default  reduce using rule 96 (LAndExp)


State 167

   96 LAndExp: LAndExp . AND EqExp
   98 LOrExp: LOrExp OR LAndExp .

    AND  shift, and go to state 155

    $default  reduce using rule 98 (LOrExp)


State 168

   58 IterationStmt: WHILE LPARENTHESE Cond RPARENTHESE Stmt .

    $default  reduce using rule 58 (IterationStmt)


State 169

   57 SelectStmt: IF LPARENTHESE Cond RPARENTHESE Stmt ELSE . Stmt

    ADD          shift, and go to state 43
    SUB          shift, and go to state 44
    SEMICOLON    shift, and go to state 86
    LPARENTHESE  shift, and go to state 45
    LBRACE       shift, and go to state 38
    IF           shift, and go to state 88
    RETURN       shift, and go to state 89
    WHILE        shift, and go to state 90
    IDENTIFIER   shift, and go to state 47
    NUMBER       shift, and go to state 48
    BREAK        shift, and go to state 91
    CONTINUE     shift, and go to state 92
    NOT          shift, and go to state 49

    Block          go to state 96
    Stmt           go to state 170
    BreakStmt      go to state 99
    ContinueStmt   go to state 100
    AssignStmt     go to state 101
    SelectStmt     go to state 102
    IterationStmt  go to state 103
    ReturnStmt     go to state 104
    Exp            go to state 105
    LVal           go to state 106
    PrimaryExp     go to state 53
    Number         go to state 54
    UnaryExp       go to state 55
    Callee         go to state 56
    UnaryOp        go to state 57
    MulExp         go to state 58
    AddExp         go to state 59


State 170

   57 SelectStmt: IF LPARENTHESE Cond RPARENTHESE Stmt ELSE Stmt .

    $default  reduce using rule 57 (SelectStmt)
