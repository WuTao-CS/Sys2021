Terminals unused in grammar

   T_STRING


State 21 conflicts: 1 shift/reduce
State 60 conflicts: 2 shift/reduce
State 61 conflicts: 3 shift/reduce
State 77 conflicts: 1 shift/reduce
State 80 conflicts: 1 shift/reduce
State 81 conflicts: 1 shift/reduce
State 82 conflicts: 6 shift/reduce
State 134 conflicts: 3 shift/reduce
State 135 conflicts: 3 shift/reduce
State 201 conflicts: 24 shift/reduce
State 202 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decl
    2        | funcDef
    3        | program decl
    4        | program funcDef

    5 basicType: T_INT
    6          | T_CHAR
    7          | T_BOOL
    8          | T_VOID

    9 literalConst: INTEGER
   10             | BOOL
   11             | CHAR
   12             | STRING

   13 compIdentifier: pIdentifier
   14               | arrayIdentifier

   15 pIdentifier: identifier
   16            | MUL pIdentifier
   17            | ADDR pIdentifier

   18 arrayIdentifier: pIdentifier LBRACKET expr RBRACKET
   19                | arrayIdentifier LBRACKET expr RBRACKET

   20 identifier: IDENTIFIER

   21 declCompIdentifier: pDeclIdentifier
   22                   | arrayDeclIdentifier

   23 pDeclIdentifier: declIdentifier
   24                | MUL pDeclIdentifier
   25                | ADDR pDeclIdentifier

   26 arrayDeclIdentifier: pDeclIdentifier LBRACKET INTEGER RBRACKET
   27                    | arrayDeclIdentifier LBRACKET INTEGER RBRACKET

   28 declIdentifier: IDENTIFIER

   29 decl: constDecl
   30     | varDecl

   31 constDecl: CONST basicType constDefs SEMICOLON

   32 constDefs: constDef
   33          | constDefs COMMA constDef

   34 constDef: pDeclIdentifier ASSIGN literalConst
   35         | arrayDeclIdentifier ASSIGN LBRACE ArrayInitVal RBRACE

   36 ArrayInitVal: literalConst
   37             | ArrayInitVal COMMA literalConst

   38 varDecl: basicType varDefs SEMICOLON

   39 varDefs: varDef
   40        | varDefs COMMA varDef

   41 varDef: declCompIdentifier
   42       | declCompIdentifier ASSIGN expr
   43       | arrayDeclIdentifier ASSIGN LBRACE ArrayInitVal RBRACE

   44 funcDef: basicType pDeclIdentifier funcLPAREN funcFParams RPAREN LBRACE blockItems RBRACE
   45        | basicType pDeclIdentifier funcLPAREN RPAREN LBRACE blockItems RBRACE

   46 funcLPAREN: LPAREN

   47 funcFParams: funcFParam
   48            | funcFParams COMMA funcFParam

   49 funcFParam: basicType pDeclIdentifier

   50 block: blockLBRACE blockItems blockRBRACE

   51 blockLBRACE: LBRACE

   52 blockRBRACE: RBRACE

   53 blockItems: blockItem
   54           | blockItems blockItem

   55 blockItem: decl
   56          | stmt

   57 stmt_: LBRACE blockItems RBRACE
   58      | stmt

   59 stmt: SEMICOLON
   60     | expr SEMICOLON
   61     | block
   62     | IF LPAREN cond RPAREN stmt_ ELSE stmt_
   63     | IF LPAREN cond RPAREN stmt_
   64     | WHILE LPAREN cond RPAREN stmt_
   65     | FOR LPAREN basicType varDefs SEMICOLON cond SEMICOLON expr RPAREN stmt_
   66     | FOR LPAREN expr SEMICOLON cond SEMICOLON expr RPAREN stmt_
   67     | BREAK SEMICOLON
   68     | CONTINUE SEMICOLON
   69     | RETURN SEMICOLON
   70     | RETURN expr SEMICOLON

   71 IF: IF_

   72 WHILE: WHILE_

   73 FOR: FOR_

   74 expr: addExpr
   75     | compIdentifier ASSIGN expr
   76     | compIdentifier PLUSASSIGN expr
   77     | compIdentifier MINUSASSIGN expr
   78     | compIdentifier MULASSIGN expr
   79     | compIdentifier DIVASSIGN expr

   80 cond: LOrExpr

   81 addExpr: mulExpr
   82        | addExpr PLUS mulExpr
   83        | addExpr MINUS mulExpr

   84 mulExpr: unaryExpr
   85        | mulExpr MUL unaryExpr
   86        | mulExpr DIV unaryExpr
   87        | mulExpr MOD unaryExpr

   88 unaryExpr: primaryExpr
   89          | NOT cond
   90          | PLUS primaryExpr
   91          | MINUS primaryExpr
   92          | pIdentifier INC
   93          | pIdentifier DEC

   94 primaryExpr: literalConst
   95            | LPAREN expr RPAREN
   96            | LPAREN cond RPAREN
   97            | pIdentifier LPAREN funcRParams RPAREN
   98            | pIdentifier LPAREN RPAREN
   99            | compIdentifier

  100 funcRParams: expr
  101            | funcRParams COMMA expr

  102 LOrExpr: LAndExpr
  103        | LAndExpr OR LOrExpr

  104 LAndExpr: eqExpr
  105         | eqExpr AND LAndExpr

  106 eqExpr: relExpr
  107       | relExpr EQ eqExpr
  108       | relExpr NEQ eqExpr

  109 relExpr: expr
  110        | relExpr GRA expr
  111        | relExpr LES expr
  112        | relExpr GRAEQ expr
  113        | relExpr LESEQ expr


Terminals, with rules where they appear

$end (0) 0
error (256)
T_CHAR (258) 6
T_INT (259) 5
T_STRING (260)
T_BOOL (261) 7
T_VOID (262) 8
ADDR (263) 17 25
ASSIGN (264) 34 35 42 43 75
PLUSASSIGN (265) 76
MINUSASSIGN (266) 77
MULASSIGN (267) 78
DIVASSIGN (268) 79
SEMICOLON (269) 31 38 59 60 65 66 67 68 69 70
COMMA (270) 33 37 40 48 101
LPAREN (271) 46 62 63 64 65 66 95 96 97 98
RPAREN (272) 44 45 62 63 64 65 66 95 96 97 98
LBRACE (273) 35 43 44 45 51 57
RBRACE (274) 35 43 44 45 52 57
LBRACKET (275) 18 19 26 27
RBRACKET (276) 18 19 26 27
CONST (277) 31
IF_ (278) 71
ELSE (279) 62
WHILE_ (280) 72
FOR_ (281) 73
BREAK (282) 67
CONTINUE (283) 68
RETURN (284) 69 70
EQ (285) 107
GRAEQ (286) 112
LESEQ (287) 113
NEQ (288) 108
GRA (289) 110
LES (290) 111
PLUS (291) 82 90
MINUS (292) 83 91
MUL (293) 16 24 85
DIV (294) 86
MOD (295) 87
AND (296) 105
OR (297) 103
NOT (298) 89
INC (299) 92
DEC (300) 93
IDENTIFIER (301) 20 28
INTEGER (302) 9 26 27
CHAR (303) 11
BOOL (304) 10
STRING (305) 12


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1 2 3 4, on right: 0 3 4
basicType (53)
    on left: 5 6 7 8, on right: 31 38 44 45 49 65
literalConst (54)
    on left: 9 10 11 12, on right: 34 36 37 94
compIdentifier (55)
    on left: 13 14, on right: 75 76 77 78 79 99
pIdentifier (56)
    on left: 15 16 17, on right: 13 16 17 18 92 93 97 98
arrayIdentifier (57)
    on left: 18 19, on right: 14 19
identifier (58)
    on left: 20, on right: 15
declCompIdentifier (59)
    on left: 21 22, on right: 41 42
pDeclIdentifier (60)
    on left: 23 24 25, on right: 21 24 25 26 34 44 45 49
arrayDeclIdentifier (61)
    on left: 26 27, on right: 22 27 35 43
declIdentifier (62)
    on left: 28, on right: 23
decl (63)
    on left: 29 30, on right: 1 3 55
constDecl (64)
    on left: 31, on right: 29
constDefs (65)
    on left: 32 33, on right: 31 33
constDef (66)
    on left: 34 35, on right: 32 33
ArrayInitVal (67)
    on left: 36 37, on right: 35 37 43
varDecl (68)
    on left: 38, on right: 30
varDefs (69)
    on left: 39 40, on right: 38 40 65
varDef (70)
    on left: 41 42 43, on right: 39 40
funcDef (71)
    on left: 44 45, on right: 2 4
funcLPAREN (72)
    on left: 46, on right: 44 45
funcFParams (73)
    on left: 47 48, on right: 44 48
funcFParam (74)
    on left: 49, on right: 47 48
block (75)
    on left: 50, on right: 61
blockLBRACE (76)
    on left: 51, on right: 50
blockRBRACE (77)
    on left: 52, on right: 50
blockItems (78)
    on left: 53 54, on right: 44 45 50 54 57
blockItem (79)
    on left: 55 56, on right: 53 54
stmt_ (80)
    on left: 57 58, on right: 62 63 64 65 66
stmt (81)
    on left: 59 60 61 62 63 64 65 66 67 68 69 70, on right: 56 58
IF (82)
    on left: 71, on right: 62 63
WHILE (83)
    on left: 72, on right: 64
FOR (84)
    on left: 73, on right: 65 66
expr (85)
    on left: 74 75 76 77 78 79, on right: 18 19 42 60 65 66 70 75 76
    77 78 79 95 100 101 109 110 111 112 113
cond (86)
    on left: 80, on right: 62 63 64 65 66 89 96
addExpr (87)
    on left: 81 82 83, on right: 74 82 83
mulExpr (88)
    on left: 84 85 86 87, on right: 81 82 83 85 86 87
unaryExpr (89)
    on left: 88 89 90 91 92 93, on right: 84 85 86 87
primaryExpr (90)
    on left: 94 95 96 97 98 99, on right: 88 90 91
funcRParams (91)
    on left: 100 101, on right: 97 101
LOrExpr (92)
    on left: 102 103, on right: 80 103
LAndExpr (93)
    on left: 104 105, on right: 102 103 105
eqExpr (94)
    on left: 106 107 108, on right: 104 105 107 108
relExpr (95)
    on left: 109 110 111 112 113, on right: 106 107 108 110 111 112
    113


State 0

    0 $accept: . program $end

    T_CHAR  shift, and go to state 1
    T_INT   shift, and go to state 2
    T_BOOL  shift, and go to state 3
    T_VOID  shift, and go to state 4
    CONST   shift, and go to state 5

    program    go to state 6
    basicType  go to state 7
    decl       go to state 8
    constDecl  go to state 9
    varDecl    go to state 10
    funcDef    go to state 11


State 1

    6 basicType: T_CHAR .

    $default  reduce using rule 6 (basicType)


State 2

    5 basicType: T_INT .

    $default  reduce using rule 5 (basicType)


State 3

    7 basicType: T_BOOL .

    $default  reduce using rule 7 (basicType)


State 4

    8 basicType: T_VOID .

    $default  reduce using rule 8 (basicType)


State 5

   31 constDecl: CONST . basicType constDefs SEMICOLON

    T_CHAR  shift, and go to state 1
    T_INT   shift, and go to state 2
    T_BOOL  shift, and go to state 3
    T_VOID  shift, and go to state 4

    basicType  go to state 12


State 6

    0 $accept: program . $end
    3 program: program . decl
    4        | program . funcDef

    $end    shift, and go to state 13
    T_CHAR  shift, and go to state 1
    T_INT   shift, and go to state 2
    T_BOOL  shift, and go to state 3
    T_VOID  shift, and go to state 4
    CONST   shift, and go to state 5

    basicType  go to state 7
    decl       go to state 14
    constDecl  go to state 9
    varDecl    go to state 10
    funcDef    go to state 15


State 7

   38 varDecl: basicType . varDefs SEMICOLON
   44 funcDef: basicType . pDeclIdentifier funcLPAREN funcFParams RPAREN LBRACE blockItems RBRACE
   45        | basicType . pDeclIdentifier funcLPAREN RPAREN LBRACE blockItems RBRACE

    ADDR        shift, and go to state 16
    MUL         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    declCompIdentifier   go to state 19
    pDeclIdentifier      go to state 20
    arrayDeclIdentifier  go to state 21
    declIdentifier       go to state 22
    varDefs              go to state 23
    varDef               go to state 24


State 8

    1 program: decl .

    $default  reduce using rule 1 (program)


State 9

   29 decl: constDecl .

    $default  reduce using rule 29 (decl)


State 10

   30 decl: varDecl .

    $default  reduce using rule 30 (decl)


State 11

    2 program: funcDef .

    $default  reduce using rule 2 (program)


State 12

   31 constDecl: CONST basicType . constDefs SEMICOLON

    ADDR        shift, and go to state 16
    MUL         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    pDeclIdentifier      go to state 25
    arrayDeclIdentifier  go to state 26
    declIdentifier       go to state 22
    constDefs            go to state 27
    constDef             go to state 28


State 13

    0 $accept: program $end .

    $default  accept


State 14

    3 program: program decl .

    $default  reduce using rule 3 (program)


State 15

    4 program: program funcDef .

    $default  reduce using rule 4 (program)


State 16

   25 pDeclIdentifier: ADDR . pDeclIdentifier

    ADDR        shift, and go to state 16
    MUL         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    pDeclIdentifier  go to state 29
    declIdentifier   go to state 22


State 17

   24 pDeclIdentifier: MUL . pDeclIdentifier

    ADDR        shift, and go to state 16
    MUL         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    pDeclIdentifier  go to state 30
    declIdentifier   go to state 22


State 18

   28 declIdentifier: IDENTIFIER .

    $default  reduce using rule 28 (declIdentifier)


State 19

   41 varDef: declCompIdentifier .
   42       | declCompIdentifier . ASSIGN expr

    ASSIGN  shift, and go to state 31

    $default  reduce using rule 41 (varDef)


State 20

   21 declCompIdentifier: pDeclIdentifier .
   26 arrayDeclIdentifier: pDeclIdentifier . LBRACKET INTEGER RBRACKET
   44 funcDef: basicType pDeclIdentifier . funcLPAREN funcFParams RPAREN LBRACE blockItems RBRACE
   45        | basicType pDeclIdentifier . funcLPAREN RPAREN LBRACE blockItems RBRACE

    LPAREN    shift, and go to state 32
    LBRACKET  shift, and go to state 33

    $default  reduce using rule 21 (declCompIdentifier)

    funcLPAREN  go to state 34


State 21

   22 declCompIdentifier: arrayDeclIdentifier .
   27 arrayDeclIdentifier: arrayDeclIdentifier . LBRACKET INTEGER RBRACKET
   43 varDef: arrayDeclIdentifier . ASSIGN LBRACE ArrayInitVal RBRACE

    ASSIGN    shift, and go to state 35
    LBRACKET  shift, and go to state 36

    ASSIGN    [reduce using rule 22 (declCompIdentifier)]
    $default  reduce using rule 22 (declCompIdentifier)


State 22

   23 pDeclIdentifier: declIdentifier .

    $default  reduce using rule 23 (pDeclIdentifier)


State 23

   38 varDecl: basicType varDefs . SEMICOLON
   40 varDefs: varDefs . COMMA varDef

    SEMICOLON  shift, and go to state 37
    COMMA      shift, and go to state 38


State 24

   39 varDefs: varDef .

    $default  reduce using rule 39 (varDefs)


State 25

   26 arrayDeclIdentifier: pDeclIdentifier . LBRACKET INTEGER RBRACKET
   34 constDef: pDeclIdentifier . ASSIGN literalConst

    ASSIGN    shift, and go to state 39
    LBRACKET  shift, and go to state 33


State 26

   27 arrayDeclIdentifier: arrayDeclIdentifier . LBRACKET INTEGER RBRACKET
   35 constDef: arrayDeclIdentifier . ASSIGN LBRACE ArrayInitVal RBRACE

    ASSIGN    shift, and go to state 40
    LBRACKET  shift, and go to state 36


State 27

   31 constDecl: CONST basicType constDefs . SEMICOLON
   33 constDefs: constDefs . COMMA constDef

    SEMICOLON  shift, and go to state 41
    COMMA      shift, and go to state 42


State 28

   32 constDefs: constDef .

    $default  reduce using rule 32 (constDefs)


State 29

   25 pDeclIdentifier: ADDR pDeclIdentifier .

    $default  reduce using rule 25 (pDeclIdentifier)


State 30

   24 pDeclIdentifier: MUL pDeclIdentifier .

    $default  reduce using rule 24 (pDeclIdentifier)


State 31

   42 varDef: declCompIdentifier ASSIGN . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 59
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 32

   46 funcLPAREN: LPAREN .

    $default  reduce using rule 46 (funcLPAREN)


State 33

   26 arrayDeclIdentifier: pDeclIdentifier LBRACKET . INTEGER RBRACKET

    INTEGER  shift, and go to state 64


State 34

   44 funcDef: basicType pDeclIdentifier funcLPAREN . funcFParams RPAREN LBRACE blockItems RBRACE
   45        | basicType pDeclIdentifier funcLPAREN . RPAREN LBRACE blockItems RBRACE

    T_CHAR  shift, and go to state 1
    T_INT   shift, and go to state 2
    T_BOOL  shift, and go to state 3
    T_VOID  shift, and go to state 4
    RPAREN  shift, and go to state 65

    basicType    go to state 66
    funcFParams  go to state 67
    funcFParam   go to state 68


State 35

   43 varDef: arrayDeclIdentifier ASSIGN . LBRACE ArrayInitVal RBRACE

    LBRACE  shift, and go to state 69


State 36

   27 arrayDeclIdentifier: arrayDeclIdentifier LBRACKET . INTEGER RBRACKET

    INTEGER  shift, and go to state 70


State 37

   38 varDecl: basicType varDefs SEMICOLON .

    $default  reduce using rule 38 (varDecl)


State 38

   40 varDefs: varDefs COMMA . varDef

    ADDR        shift, and go to state 16
    MUL         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    declCompIdentifier   go to state 19
    pDeclIdentifier      go to state 71
    arrayDeclIdentifier  go to state 21
    declIdentifier       go to state 22
    varDef               go to state 72


State 39

   34 constDef: pDeclIdentifier ASSIGN . literalConst

    INTEGER  shift, and go to state 50
    CHAR     shift, and go to state 51
    BOOL     shift, and go to state 52
    STRING   shift, and go to state 53

    literalConst  go to state 73


State 40

   35 constDef: arrayDeclIdentifier ASSIGN . LBRACE ArrayInitVal RBRACE

    LBRACE  shift, and go to state 74


State 41

   31 constDecl: CONST basicType constDefs SEMICOLON .

    $default  reduce using rule 31 (constDecl)


State 42

   33 constDefs: constDefs COMMA . constDef

    ADDR        shift, and go to state 16
    MUL         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    pDeclIdentifier      go to state 25
    arrayDeclIdentifier  go to state 26
    declIdentifier       go to state 22
    constDef             go to state 75


State 43

   17 pIdentifier: ADDR . pIdentifier

    ADDR        shift, and go to state 43
    MUL         shift, and go to state 47
    IDENTIFIER  shift, and go to state 49

    pIdentifier  go to state 76
    identifier   go to state 58


State 44

   95 primaryExpr: LPAREN . expr RPAREN
   96            | LPAREN . cond RPAREN

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 77
    cond             go to state 78
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63
    LOrExpr          go to state 79
    LAndExpr         go to state 80
    eqExpr           go to state 81
    relExpr          go to state 82


State 45

   90 unaryExpr: PLUS . primaryExpr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    MUL         shift, and go to state 47
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 83
    pIdentifier      go to state 84
    arrayIdentifier  go to state 57
    identifier       go to state 58
    primaryExpr      go to state 85


State 46

   91 unaryExpr: MINUS . primaryExpr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    MUL         shift, and go to state 47
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 83
    pIdentifier      go to state 84
    arrayIdentifier  go to state 57
    identifier       go to state 58
    primaryExpr      go to state 86


State 47

   16 pIdentifier: MUL . pIdentifier

    ADDR        shift, and go to state 43
    MUL         shift, and go to state 47
    IDENTIFIER  shift, and go to state 49

    pIdentifier  go to state 87
    identifier   go to state 58


State 48

   89 unaryExpr: NOT . cond

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 88
    cond             go to state 89
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63
    LOrExpr          go to state 79
    LAndExpr         go to state 80
    eqExpr           go to state 81
    relExpr          go to state 82


State 49

   20 identifier: IDENTIFIER .

    $default  reduce using rule 20 (identifier)


State 50

    9 literalConst: INTEGER .

    $default  reduce using rule 9 (literalConst)


State 51

   11 literalConst: CHAR .

    $default  reduce using rule 11 (literalConst)


State 52

   10 literalConst: BOOL .

    $default  reduce using rule 10 (literalConst)


State 53

   12 literalConst: STRING .

    $default  reduce using rule 12 (literalConst)


State 54

   94 primaryExpr: literalConst .

    $default  reduce using rule 94 (primaryExpr)


State 55

   75 expr: compIdentifier . ASSIGN expr
   76     | compIdentifier . PLUSASSIGN expr
   77     | compIdentifier . MINUSASSIGN expr
   78     | compIdentifier . MULASSIGN expr
   79     | compIdentifier . DIVASSIGN expr
   99 primaryExpr: compIdentifier .

    ASSIGN       shift, and go to state 90
    PLUSASSIGN   shift, and go to state 91
    MINUSASSIGN  shift, and go to state 92
    MULASSIGN    shift, and go to state 93
    DIVASSIGN    shift, and go to state 94

    $default  reduce using rule 99 (primaryExpr)


State 56

   13 compIdentifier: pIdentifier .
   18 arrayIdentifier: pIdentifier . LBRACKET expr RBRACKET
   92 unaryExpr: pIdentifier . INC
   93          | pIdentifier . DEC
   97 primaryExpr: pIdentifier . LPAREN funcRParams RPAREN
   98            | pIdentifier . LPAREN RPAREN

    LPAREN    shift, and go to state 95
    LBRACKET  shift, and go to state 96
    INC       shift, and go to state 97
    DEC       shift, and go to state 98

    $default  reduce using rule 13 (compIdentifier)


State 57

   14 compIdentifier: arrayIdentifier .
   19 arrayIdentifier: arrayIdentifier . LBRACKET expr RBRACKET

    LBRACKET  shift, and go to state 99

    $default  reduce using rule 14 (compIdentifier)


State 58

   15 pIdentifier: identifier .

    $default  reduce using rule 15 (pIdentifier)


State 59

   42 varDef: declCompIdentifier ASSIGN expr .

    $default  reduce using rule 42 (varDef)


State 60

   74 expr: addExpr .
   82 addExpr: addExpr . PLUS mulExpr
   83        | addExpr . MINUS mulExpr

    PLUS   shift, and go to state 100
    MINUS  shift, and go to state 101

    PLUS      [reduce using rule 74 (expr)]
    MINUS     [reduce using rule 74 (expr)]
    $default  reduce using rule 74 (expr)


State 61

   81 addExpr: mulExpr .
   85 mulExpr: mulExpr . MUL unaryExpr
   86        | mulExpr . DIV unaryExpr
   87        | mulExpr . MOD unaryExpr

    MUL  shift, and go to state 102
    DIV  shift, and go to state 103
    MOD  shift, and go to state 104

    MUL       [reduce using rule 81 (addExpr)]
    DIV       [reduce using rule 81 (addExpr)]
    MOD       [reduce using rule 81 (addExpr)]
    $default  reduce using rule 81 (addExpr)


State 62

   84 mulExpr: unaryExpr .

    $default  reduce using rule 84 (mulExpr)


State 63

   88 unaryExpr: primaryExpr .

    $default  reduce using rule 88 (unaryExpr)


State 64

   26 arrayDeclIdentifier: pDeclIdentifier LBRACKET INTEGER . RBRACKET

    RBRACKET  shift, and go to state 105


State 65

   45 funcDef: basicType pDeclIdentifier funcLPAREN RPAREN . LBRACE blockItems RBRACE

    LBRACE  shift, and go to state 106


State 66

   49 funcFParam: basicType . pDeclIdentifier

    ADDR        shift, and go to state 16
    MUL         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    pDeclIdentifier  go to state 107
    declIdentifier   go to state 22


State 67

   44 funcDef: basicType pDeclIdentifier funcLPAREN funcFParams . RPAREN LBRACE blockItems RBRACE
   48 funcFParams: funcFParams . COMMA funcFParam

    COMMA   shift, and go to state 108
    RPAREN  shift, and go to state 109


State 68

   47 funcFParams: funcFParam .

    $default  reduce using rule 47 (funcFParams)


State 69

   43 varDef: arrayDeclIdentifier ASSIGN LBRACE . ArrayInitVal RBRACE

    INTEGER  shift, and go to state 50
    CHAR     shift, and go to state 51
    BOOL     shift, and go to state 52
    STRING   shift, and go to state 53

    literalConst  go to state 110
    ArrayInitVal  go to state 111


State 70

   27 arrayDeclIdentifier: arrayDeclIdentifier LBRACKET INTEGER . RBRACKET

    RBRACKET  shift, and go to state 112


State 71

   21 declCompIdentifier: pDeclIdentifier .
   26 arrayDeclIdentifier: pDeclIdentifier . LBRACKET INTEGER RBRACKET

    LBRACKET  shift, and go to state 33

    $default  reduce using rule 21 (declCompIdentifier)


State 72

   40 varDefs: varDefs COMMA varDef .

    $default  reduce using rule 40 (varDefs)


State 73

   34 constDef: pDeclIdentifier ASSIGN literalConst .

    $default  reduce using rule 34 (constDef)


State 74

   35 constDef: arrayDeclIdentifier ASSIGN LBRACE . ArrayInitVal RBRACE

    INTEGER  shift, and go to state 50
    CHAR     shift, and go to state 51
    BOOL     shift, and go to state 52
    STRING   shift, and go to state 53

    literalConst  go to state 110
    ArrayInitVal  go to state 113


State 75

   33 constDefs: constDefs COMMA constDef .

    $default  reduce using rule 33 (constDefs)


State 76

   17 pIdentifier: ADDR pIdentifier .

    $default  reduce using rule 17 (pIdentifier)


State 77

   95 primaryExpr: LPAREN expr . RPAREN
  109 relExpr: expr .

    RPAREN  shift, and go to state 114

    RPAREN    [reduce using rule 109 (relExpr)]
    $default  reduce using rule 109 (relExpr)


State 78

   96 primaryExpr: LPAREN cond . RPAREN

    RPAREN  shift, and go to state 115


State 79

   80 cond: LOrExpr .

    $default  reduce using rule 80 (cond)


State 80

  102 LOrExpr: LAndExpr .
  103        | LAndExpr . OR LOrExpr

    OR  shift, and go to state 116

    OR        [reduce using rule 102 (LOrExpr)]
    $default  reduce using rule 102 (LOrExpr)


State 81

  104 LAndExpr: eqExpr .
  105         | eqExpr . AND LAndExpr

    AND  shift, and go to state 117

    AND       [reduce using rule 104 (LAndExpr)]
    $default  reduce using rule 104 (LAndExpr)


State 82

  106 eqExpr: relExpr .
  107       | relExpr . EQ eqExpr
  108       | relExpr . NEQ eqExpr
  110 relExpr: relExpr . GRA expr
  111        | relExpr . LES expr
  112        | relExpr . GRAEQ expr
  113        | relExpr . LESEQ expr

    EQ     shift, and go to state 118
    GRAEQ  shift, and go to state 119
    LESEQ  shift, and go to state 120
    NEQ    shift, and go to state 121
    GRA    shift, and go to state 122
    LES    shift, and go to state 123

    EQ        [reduce using rule 106 (eqExpr)]
    GRAEQ     [reduce using rule 106 (eqExpr)]
    LESEQ     [reduce using rule 106 (eqExpr)]
    NEQ       [reduce using rule 106 (eqExpr)]
    GRA       [reduce using rule 106 (eqExpr)]
    LES       [reduce using rule 106 (eqExpr)]
    $default  reduce using rule 106 (eqExpr)


State 83

   99 primaryExpr: compIdentifier .

    $default  reduce using rule 99 (primaryExpr)


State 84

   13 compIdentifier: pIdentifier .
   18 arrayIdentifier: pIdentifier . LBRACKET expr RBRACKET
   97 primaryExpr: pIdentifier . LPAREN funcRParams RPAREN
   98            | pIdentifier . LPAREN RPAREN

    LPAREN    shift, and go to state 95
    LBRACKET  shift, and go to state 96

    $default  reduce using rule 13 (compIdentifier)


State 85

   90 unaryExpr: PLUS primaryExpr .

    $default  reduce using rule 90 (unaryExpr)


State 86

   91 unaryExpr: MINUS primaryExpr .

    $default  reduce using rule 91 (unaryExpr)


State 87

   16 pIdentifier: MUL pIdentifier .

    $default  reduce using rule 16 (pIdentifier)


State 88

  109 relExpr: expr .

    $default  reduce using rule 109 (relExpr)


State 89

   89 unaryExpr: NOT cond .

    $default  reduce using rule 89 (unaryExpr)


State 90

   75 expr: compIdentifier ASSIGN . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 124
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 91

   76 expr: compIdentifier PLUSASSIGN . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 125
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 92

   77 expr: compIdentifier MINUSASSIGN . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 126
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 93

   78 expr: compIdentifier MULASSIGN . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 127
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 94

   79 expr: compIdentifier DIVASSIGN . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 128
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 95

   97 primaryExpr: pIdentifier LPAREN . funcRParams RPAREN
   98            | pIdentifier LPAREN . RPAREN

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    RPAREN      shift, and go to state 129
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 130
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63
    funcRParams      go to state 131


State 96

   18 arrayIdentifier: pIdentifier LBRACKET . expr RBRACKET

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 132
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 97

   92 unaryExpr: pIdentifier INC .

    $default  reduce using rule 92 (unaryExpr)


State 98

   93 unaryExpr: pIdentifier DEC .

    $default  reduce using rule 93 (unaryExpr)


State 99

   19 arrayIdentifier: arrayIdentifier LBRACKET . expr RBRACKET

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 133
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 100

   82 addExpr: addExpr PLUS . mulExpr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 83
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    mulExpr          go to state 134
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 101

   83 addExpr: addExpr MINUS . mulExpr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 83
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    mulExpr          go to state 135
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 102

   85 mulExpr: mulExpr MUL . unaryExpr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 83
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    unaryExpr        go to state 136
    primaryExpr      go to state 63


State 103

   86 mulExpr: mulExpr DIV . unaryExpr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 83
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    unaryExpr        go to state 137
    primaryExpr      go to state 63


State 104

   87 mulExpr: mulExpr MOD . unaryExpr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 83
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    unaryExpr        go to state 138
    primaryExpr      go to state 63


State 105

   26 arrayDeclIdentifier: pDeclIdentifier LBRACKET INTEGER RBRACKET .

    $default  reduce using rule 26 (arrayDeclIdentifier)


State 106

   45 funcDef: basicType pDeclIdentifier funcLPAREN RPAREN LBRACE . blockItems RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 139
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 140
    CONST       shift, and go to state 5
    IF_         shift, and go to state 141
    WHILE_      shift, and go to state 142
    FOR_        shift, and go to state 143
    BREAK       shift, and go to state 144
    CONTINUE    shift, and go to state 145
    RETURN      shift, and go to state 146
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    basicType        go to state 147
    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    decl             go to state 148
    constDecl        go to state 9
    varDecl          go to state 10
    block            go to state 149
    blockLBRACE      go to state 150
    blockItems       go to state 151
    blockItem        go to state 152
    stmt             go to state 153
    IF               go to state 154
    WHILE            go to state 155
    FOR              go to state 156
    expr             go to state 157
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 107

   49 funcFParam: basicType pDeclIdentifier .

    $default  reduce using rule 49 (funcFParam)


State 108

   48 funcFParams: funcFParams COMMA . funcFParam

    T_CHAR  shift, and go to state 1
    T_INT   shift, and go to state 2
    T_BOOL  shift, and go to state 3
    T_VOID  shift, and go to state 4

    basicType   go to state 66
    funcFParam  go to state 158


State 109

   44 funcDef: basicType pDeclIdentifier funcLPAREN funcFParams RPAREN . LBRACE blockItems RBRACE

    LBRACE  shift, and go to state 159


State 110

   36 ArrayInitVal: literalConst .

    $default  reduce using rule 36 (ArrayInitVal)


State 111

   37 ArrayInitVal: ArrayInitVal . COMMA literalConst
   43 varDef: arrayDeclIdentifier ASSIGN LBRACE ArrayInitVal . RBRACE

    COMMA   shift, and go to state 160
    RBRACE  shift, and go to state 161


State 112

   27 arrayDeclIdentifier: arrayDeclIdentifier LBRACKET INTEGER RBRACKET .

    $default  reduce using rule 27 (arrayDeclIdentifier)


State 113

   35 constDef: arrayDeclIdentifier ASSIGN LBRACE ArrayInitVal . RBRACE
   37 ArrayInitVal: ArrayInitVal . COMMA literalConst

    COMMA   shift, and go to state 160
    RBRACE  shift, and go to state 162


State 114

   95 primaryExpr: LPAREN expr RPAREN .

    $default  reduce using rule 95 (primaryExpr)


State 115

   96 primaryExpr: LPAREN cond RPAREN .

    $default  reduce using rule 96 (primaryExpr)


State 116

  103 LOrExpr: LAndExpr OR . LOrExpr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 88
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63
    LOrExpr          go to state 163
    LAndExpr         go to state 80
    eqExpr           go to state 81
    relExpr          go to state 82


State 117

  105 LAndExpr: eqExpr AND . LAndExpr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 88
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63
    LAndExpr         go to state 164
    eqExpr           go to state 81
    relExpr          go to state 82


State 118

  107 eqExpr: relExpr EQ . eqExpr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 88
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63
    eqExpr           go to state 165
    relExpr          go to state 82


State 119

  112 relExpr: relExpr GRAEQ . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 166
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 120

  113 relExpr: relExpr LESEQ . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 167
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 121

  108 eqExpr: relExpr NEQ . eqExpr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 88
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63
    eqExpr           go to state 168
    relExpr          go to state 82


State 122

  110 relExpr: relExpr GRA . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 169
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 123

  111 relExpr: relExpr LES . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 170
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 124

   75 expr: compIdentifier ASSIGN expr .

    $default  reduce using rule 75 (expr)


State 125

   76 expr: compIdentifier PLUSASSIGN expr .

    $default  reduce using rule 76 (expr)


State 126

   77 expr: compIdentifier MINUSASSIGN expr .

    $default  reduce using rule 77 (expr)


State 127

   78 expr: compIdentifier MULASSIGN expr .

    $default  reduce using rule 78 (expr)


State 128

   79 expr: compIdentifier DIVASSIGN expr .

    $default  reduce using rule 79 (expr)


State 129

   98 primaryExpr: pIdentifier LPAREN RPAREN .

    $default  reduce using rule 98 (primaryExpr)


State 130

  100 funcRParams: expr .

    $default  reduce using rule 100 (funcRParams)


State 131

   97 primaryExpr: pIdentifier LPAREN funcRParams . RPAREN
  101 funcRParams: funcRParams . COMMA expr

    COMMA   shift, and go to state 171
    RPAREN  shift, and go to state 172


State 132

   18 arrayIdentifier: pIdentifier LBRACKET expr . RBRACKET

    RBRACKET  shift, and go to state 173


State 133

   19 arrayIdentifier: arrayIdentifier LBRACKET expr . RBRACKET

    RBRACKET  shift, and go to state 174


State 134

   82 addExpr: addExpr PLUS mulExpr .
   85 mulExpr: mulExpr . MUL unaryExpr
   86        | mulExpr . DIV unaryExpr
   87        | mulExpr . MOD unaryExpr

    MUL  shift, and go to state 102
    DIV  shift, and go to state 103
    MOD  shift, and go to state 104

    MUL       [reduce using rule 82 (addExpr)]
    DIV       [reduce using rule 82 (addExpr)]
    MOD       [reduce using rule 82 (addExpr)]
    $default  reduce using rule 82 (addExpr)


State 135

   83 addExpr: addExpr MINUS mulExpr .
   85 mulExpr: mulExpr . MUL unaryExpr
   86        | mulExpr . DIV unaryExpr
   87        | mulExpr . MOD unaryExpr

    MUL  shift, and go to state 102
    DIV  shift, and go to state 103
    MOD  shift, and go to state 104

    MUL       [reduce using rule 83 (addExpr)]
    DIV       [reduce using rule 83 (addExpr)]
    MOD       [reduce using rule 83 (addExpr)]
    $default  reduce using rule 83 (addExpr)


State 136

   85 mulExpr: mulExpr MUL unaryExpr .

    $default  reduce using rule 85 (mulExpr)


State 137

   86 mulExpr: mulExpr DIV unaryExpr .

    $default  reduce using rule 86 (mulExpr)


State 138

   87 mulExpr: mulExpr MOD unaryExpr .

    $default  reduce using rule 87 (mulExpr)


State 139

   59 stmt: SEMICOLON .

    $default  reduce using rule 59 (stmt)


State 140

   51 blockLBRACE: LBRACE .

    $default  reduce using rule 51 (blockLBRACE)


State 141

   71 IF: IF_ .

    $default  reduce using rule 71 (IF)


State 142

   72 WHILE: WHILE_ .

    $default  reduce using rule 72 (WHILE)


State 143

   73 FOR: FOR_ .

    $default  reduce using rule 73 (FOR)


State 144

   67 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 175


State 145

   68 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 176


State 146

   69 stmt: RETURN . SEMICOLON
   70     | RETURN . expr SEMICOLON

    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 177
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 178
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 147

   38 varDecl: basicType . varDefs SEMICOLON

    ADDR        shift, and go to state 16
    MUL         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    declCompIdentifier   go to state 19
    pDeclIdentifier      go to state 71
    arrayDeclIdentifier  go to state 21
    declIdentifier       go to state 22
    varDefs              go to state 23
    varDef               go to state 24


State 148

   55 blockItem: decl .

    $default  reduce using rule 55 (blockItem)


State 149

   61 stmt: block .

    $default  reduce using rule 61 (stmt)


State 150

   50 block: blockLBRACE . blockItems blockRBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 139
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 140
    CONST       shift, and go to state 5
    IF_         shift, and go to state 141
    WHILE_      shift, and go to state 142
    FOR_        shift, and go to state 143
    BREAK       shift, and go to state 144
    CONTINUE    shift, and go to state 145
    RETURN      shift, and go to state 146
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    basicType        go to state 147
    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    decl             go to state 148
    constDecl        go to state 9
    varDecl          go to state 10
    block            go to state 149
    blockLBRACE      go to state 150
    blockItems       go to state 179
    blockItem        go to state 152
    stmt             go to state 153
    IF               go to state 154
    WHILE            go to state 155
    FOR              go to state 156
    expr             go to state 157
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 151

   45 funcDef: basicType pDeclIdentifier funcLPAREN RPAREN LBRACE blockItems . RBRACE
   54 blockItems: blockItems . blockItem

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 139
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 140
    RBRACE      shift, and go to state 180
    CONST       shift, and go to state 5
    IF_         shift, and go to state 141
    WHILE_      shift, and go to state 142
    FOR_        shift, and go to state 143
    BREAK       shift, and go to state 144
    CONTINUE    shift, and go to state 145
    RETURN      shift, and go to state 146
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    basicType        go to state 147
    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    decl             go to state 148
    constDecl        go to state 9
    varDecl          go to state 10
    block            go to state 149
    blockLBRACE      go to state 150
    blockItem        go to state 181
    stmt             go to state 153
    IF               go to state 154
    WHILE            go to state 155
    FOR              go to state 156
    expr             go to state 157
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 152

   53 blockItems: blockItem .

    $default  reduce using rule 53 (blockItems)


State 153

   56 blockItem: stmt .

    $default  reduce using rule 56 (blockItem)


State 154

   62 stmt: IF . LPAREN cond RPAREN stmt_ ELSE stmt_
   63     | IF . LPAREN cond RPAREN stmt_

    LPAREN  shift, and go to state 182


State 155

   64 stmt: WHILE . LPAREN cond RPAREN stmt_

    LPAREN  shift, and go to state 183


State 156

   65 stmt: FOR . LPAREN basicType varDefs SEMICOLON cond SEMICOLON expr RPAREN stmt_
   66     | FOR . LPAREN expr SEMICOLON cond SEMICOLON expr RPAREN stmt_

    LPAREN  shift, and go to state 184


State 157

   60 stmt: expr . SEMICOLON

    SEMICOLON  shift, and go to state 185


State 158

   48 funcFParams: funcFParams COMMA funcFParam .

    $default  reduce using rule 48 (funcFParams)


State 159

   44 funcDef: basicType pDeclIdentifier funcLPAREN funcFParams RPAREN LBRACE . blockItems RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 139
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 140
    CONST       shift, and go to state 5
    IF_         shift, and go to state 141
    WHILE_      shift, and go to state 142
    FOR_        shift, and go to state 143
    BREAK       shift, and go to state 144
    CONTINUE    shift, and go to state 145
    RETURN      shift, and go to state 146
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    basicType        go to state 147
    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    decl             go to state 148
    constDecl        go to state 9
    varDecl          go to state 10
    block            go to state 149
    blockLBRACE      go to state 150
    blockItems       go to state 186
    blockItem        go to state 152
    stmt             go to state 153
    IF               go to state 154
    WHILE            go to state 155
    FOR              go to state 156
    expr             go to state 157
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 160

   37 ArrayInitVal: ArrayInitVal COMMA . literalConst

    INTEGER  shift, and go to state 50
    CHAR     shift, and go to state 51
    BOOL     shift, and go to state 52
    STRING   shift, and go to state 53

    literalConst  go to state 187


State 161

   43 varDef: arrayDeclIdentifier ASSIGN LBRACE ArrayInitVal RBRACE .

    $default  reduce using rule 43 (varDef)


State 162

   35 constDef: arrayDeclIdentifier ASSIGN LBRACE ArrayInitVal RBRACE .

    $default  reduce using rule 35 (constDef)


State 163

  103 LOrExpr: LAndExpr OR LOrExpr .

    $default  reduce using rule 103 (LOrExpr)


State 164

  105 LAndExpr: eqExpr AND LAndExpr .

    $default  reduce using rule 105 (LAndExpr)


State 165

  107 eqExpr: relExpr EQ eqExpr .

    $default  reduce using rule 107 (eqExpr)


State 166

  112 relExpr: relExpr GRAEQ expr .

    $default  reduce using rule 112 (relExpr)


State 167

  113 relExpr: relExpr LESEQ expr .

    $default  reduce using rule 113 (relExpr)


State 168

  108 eqExpr: relExpr NEQ eqExpr .

    $default  reduce using rule 108 (eqExpr)


State 169

  110 relExpr: relExpr GRA expr .

    $default  reduce using rule 110 (relExpr)


State 170

  111 relExpr: relExpr LES expr .

    $default  reduce using rule 111 (relExpr)


State 171

  101 funcRParams: funcRParams COMMA . expr

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 188
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 172

   97 primaryExpr: pIdentifier LPAREN funcRParams RPAREN .

    $default  reduce using rule 97 (primaryExpr)


State 173

   18 arrayIdentifier: pIdentifier LBRACKET expr RBRACKET .

    $default  reduce using rule 18 (arrayIdentifier)


State 174

   19 arrayIdentifier: arrayIdentifier LBRACKET expr RBRACKET .

    $default  reduce using rule 19 (arrayIdentifier)


State 175

   67 stmt: BREAK SEMICOLON .

    $default  reduce using rule 67 (stmt)


State 176

   68 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 68 (stmt)


State 177

   69 stmt: RETURN SEMICOLON .

    $default  reduce using rule 69 (stmt)


State 178

   70 stmt: RETURN expr . SEMICOLON

    SEMICOLON  shift, and go to state 189


State 179

   50 block: blockLBRACE blockItems . blockRBRACE
   54 blockItems: blockItems . blockItem

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 139
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 140
    RBRACE      shift, and go to state 190
    CONST       shift, and go to state 5
    IF_         shift, and go to state 141
    WHILE_      shift, and go to state 142
    FOR_        shift, and go to state 143
    BREAK       shift, and go to state 144
    CONTINUE    shift, and go to state 145
    RETURN      shift, and go to state 146
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    basicType        go to state 147
    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    decl             go to state 148
    constDecl        go to state 9
    varDecl          go to state 10
    block            go to state 149
    blockLBRACE      go to state 150
    blockRBRACE      go to state 191
    blockItem        go to state 181
    stmt             go to state 153
    IF               go to state 154
    WHILE            go to state 155
    FOR              go to state 156
    expr             go to state 157
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 180

   45 funcDef: basicType pDeclIdentifier funcLPAREN RPAREN LBRACE blockItems RBRACE .

    $default  reduce using rule 45 (funcDef)


State 181

   54 blockItems: blockItems blockItem .

    $default  reduce using rule 54 (blockItems)


State 182

   62 stmt: IF LPAREN . cond RPAREN stmt_ ELSE stmt_
   63     | IF LPAREN . cond RPAREN stmt_

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 88
    cond             go to state 192
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63
    LOrExpr          go to state 79
    LAndExpr         go to state 80
    eqExpr           go to state 81
    relExpr          go to state 82


State 183

   64 stmt: WHILE LPAREN . cond RPAREN stmt_

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 88
    cond             go to state 193
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63
    LOrExpr          go to state 79
    LAndExpr         go to state 80
    eqExpr           go to state 81
    relExpr          go to state 82


State 184

   65 stmt: FOR LPAREN . basicType varDefs SEMICOLON cond SEMICOLON expr RPAREN stmt_
   66     | FOR LPAREN . expr SEMICOLON cond SEMICOLON expr RPAREN stmt_

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    basicType        go to state 194
    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 195
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 185

   60 stmt: expr SEMICOLON .

    $default  reduce using rule 60 (stmt)


State 186

   44 funcDef: basicType pDeclIdentifier funcLPAREN funcFParams RPAREN LBRACE blockItems . RBRACE
   54 blockItems: blockItems . blockItem

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 139
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 140
    RBRACE      shift, and go to state 196
    CONST       shift, and go to state 5
    IF_         shift, and go to state 141
    WHILE_      shift, and go to state 142
    FOR_        shift, and go to state 143
    BREAK       shift, and go to state 144
    CONTINUE    shift, and go to state 145
    RETURN      shift, and go to state 146
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    basicType        go to state 147
    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    decl             go to state 148
    constDecl        go to state 9
    varDecl          go to state 10
    block            go to state 149
    blockLBRACE      go to state 150
    blockItem        go to state 181
    stmt             go to state 153
    IF               go to state 154
    WHILE            go to state 155
    FOR              go to state 156
    expr             go to state 157
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 187

   37 ArrayInitVal: ArrayInitVal COMMA literalConst .

    $default  reduce using rule 37 (ArrayInitVal)


State 188

  101 funcRParams: funcRParams COMMA expr .

    $default  reduce using rule 101 (funcRParams)


State 189

   70 stmt: RETURN expr SEMICOLON .

    $default  reduce using rule 70 (stmt)


State 190

   52 blockRBRACE: RBRACE .

    $default  reduce using rule 52 (blockRBRACE)


State 191

   50 block: blockLBRACE blockItems blockRBRACE .

    $default  reduce using rule 50 (block)


State 192

   62 stmt: IF LPAREN cond . RPAREN stmt_ ELSE stmt_
   63     | IF LPAREN cond . RPAREN stmt_

    RPAREN  shift, and go to state 197


State 193

   64 stmt: WHILE LPAREN cond . RPAREN stmt_

    RPAREN  shift, and go to state 198


State 194

   65 stmt: FOR LPAREN basicType . varDefs SEMICOLON cond SEMICOLON expr RPAREN stmt_

    ADDR        shift, and go to state 16
    MUL         shift, and go to state 17
    IDENTIFIER  shift, and go to state 18

    declCompIdentifier   go to state 19
    pDeclIdentifier      go to state 71
    arrayDeclIdentifier  go to state 21
    declIdentifier       go to state 22
    varDefs              go to state 199
    varDef               go to state 24


State 195

   66 stmt: FOR LPAREN expr . SEMICOLON cond SEMICOLON expr RPAREN stmt_

    SEMICOLON  shift, and go to state 200


State 196

   44 funcDef: basicType pDeclIdentifier funcLPAREN funcFParams RPAREN LBRACE blockItems RBRACE .

    $default  reduce using rule 44 (funcDef)


State 197

   62 stmt: IF LPAREN cond RPAREN . stmt_ ELSE stmt_
   63     | IF LPAREN cond RPAREN . stmt_

    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 139
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 201
    IF_         shift, and go to state 141
    WHILE_      shift, and go to state 142
    FOR_        shift, and go to state 143
    BREAK       shift, and go to state 144
    CONTINUE    shift, and go to state 145
    RETURN      shift, and go to state 146
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    block            go to state 149
    blockLBRACE      go to state 150
    stmt_            go to state 202
    stmt             go to state 203
    IF               go to state 154
    WHILE            go to state 155
    FOR              go to state 156
    expr             go to state 157
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 198

   64 stmt: WHILE LPAREN cond RPAREN . stmt_

    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 139
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 201
    IF_         shift, and go to state 141
    WHILE_      shift, and go to state 142
    FOR_        shift, and go to state 143
    BREAK       shift, and go to state 144
    CONTINUE    shift, and go to state 145
    RETURN      shift, and go to state 146
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    block            go to state 149
    blockLBRACE      go to state 150
    stmt_            go to state 204
    stmt             go to state 203
    IF               go to state 154
    WHILE            go to state 155
    FOR              go to state 156
    expr             go to state 157
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 199

   40 varDefs: varDefs . COMMA varDef
   65 stmt: FOR LPAREN basicType varDefs . SEMICOLON cond SEMICOLON expr RPAREN stmt_

    SEMICOLON  shift, and go to state 205
    COMMA      shift, and go to state 38


State 200

   66 stmt: FOR LPAREN expr SEMICOLON . cond SEMICOLON expr RPAREN stmt_

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 88
    cond             go to state 206
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63
    LOrExpr          go to state 79
    LAndExpr         go to state 80
    eqExpr           go to state 81
    relExpr          go to state 82


State 201

   51 blockLBRACE: LBRACE .
   57 stmt_: LBRACE . blockItems RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 139
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 140
    CONST       shift, and go to state 5
    IF_         shift, and go to state 141
    WHILE_      shift, and go to state 142
    FOR_        shift, and go to state 143
    BREAK       shift, and go to state 144
    CONTINUE    shift, and go to state 145
    RETURN      shift, and go to state 146
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    T_CHAR      [reduce using rule 51 (blockLBRACE)]
    T_INT       [reduce using rule 51 (blockLBRACE)]
    T_BOOL      [reduce using rule 51 (blockLBRACE)]
    T_VOID      [reduce using rule 51 (blockLBRACE)]
    ADDR        [reduce using rule 51 (blockLBRACE)]
    SEMICOLON   [reduce using rule 51 (blockLBRACE)]
    LPAREN      [reduce using rule 51 (blockLBRACE)]
    LBRACE      [reduce using rule 51 (blockLBRACE)]
    CONST       [reduce using rule 51 (blockLBRACE)]
    IF_         [reduce using rule 51 (blockLBRACE)]
    WHILE_      [reduce using rule 51 (blockLBRACE)]
    FOR_        [reduce using rule 51 (blockLBRACE)]
    BREAK       [reduce using rule 51 (blockLBRACE)]
    CONTINUE    [reduce using rule 51 (blockLBRACE)]
    RETURN      [reduce using rule 51 (blockLBRACE)]
    PLUS        [reduce using rule 51 (blockLBRACE)]
    MINUS       [reduce using rule 51 (blockLBRACE)]
    MUL         [reduce using rule 51 (blockLBRACE)]
    NOT         [reduce using rule 51 (blockLBRACE)]
    IDENTIFIER  [reduce using rule 51 (blockLBRACE)]
    INTEGER     [reduce using rule 51 (blockLBRACE)]
    CHAR        [reduce using rule 51 (blockLBRACE)]
    BOOL        [reduce using rule 51 (blockLBRACE)]
    STRING      [reduce using rule 51 (blockLBRACE)]

    basicType        go to state 147
    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    decl             go to state 148
    constDecl        go to state 9
    varDecl          go to state 10
    block            go to state 149
    blockLBRACE      go to state 150
    blockItems       go to state 207
    blockItem        go to state 152
    stmt             go to state 153
    IF               go to state 154
    WHILE            go to state 155
    FOR              go to state 156
    expr             go to state 157
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 202

   62 stmt: IF LPAREN cond RPAREN stmt_ . ELSE stmt_
   63     | IF LPAREN cond RPAREN stmt_ .

    ELSE  shift, and go to state 208

    ELSE      [reduce using rule 63 (stmt)]
    $default  reduce using rule 63 (stmt)


State 203

   58 stmt_: stmt .

    $default  reduce using rule 58 (stmt_)


State 204

   64 stmt: WHILE LPAREN cond RPAREN stmt_ .

    $default  reduce using rule 64 (stmt)


State 205

   65 stmt: FOR LPAREN basicType varDefs SEMICOLON . cond SEMICOLON expr RPAREN stmt_

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 88
    cond             go to state 209
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63
    LOrExpr          go to state 79
    LAndExpr         go to state 80
    eqExpr           go to state 81
    relExpr          go to state 82


State 206

   66 stmt: FOR LPAREN expr SEMICOLON cond . SEMICOLON expr RPAREN stmt_

    SEMICOLON  shift, and go to state 210


State 207

   54 blockItems: blockItems . blockItem
   57 stmt_: LBRACE blockItems . RBRACE

    T_CHAR      shift, and go to state 1
    T_INT       shift, and go to state 2
    T_BOOL      shift, and go to state 3
    T_VOID      shift, and go to state 4
    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 139
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 140
    RBRACE      shift, and go to state 211
    CONST       shift, and go to state 5
    IF_         shift, and go to state 141
    WHILE_      shift, and go to state 142
    FOR_        shift, and go to state 143
    BREAK       shift, and go to state 144
    CONTINUE    shift, and go to state 145
    RETURN      shift, and go to state 146
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    basicType        go to state 147
    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    decl             go to state 148
    constDecl        go to state 9
    varDecl          go to state 10
    block            go to state 149
    blockLBRACE      go to state 150
    blockItem        go to state 181
    stmt             go to state 153
    IF               go to state 154
    WHILE            go to state 155
    FOR              go to state 156
    expr             go to state 157
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 208

   62 stmt: IF LPAREN cond RPAREN stmt_ ELSE . stmt_

    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 139
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 201
    IF_         shift, and go to state 141
    WHILE_      shift, and go to state 142
    FOR_        shift, and go to state 143
    BREAK       shift, and go to state 144
    CONTINUE    shift, and go to state 145
    RETURN      shift, and go to state 146
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    block            go to state 149
    blockLBRACE      go to state 150
    stmt_            go to state 212
    stmt             go to state 203
    IF               go to state 154
    WHILE            go to state 155
    FOR              go to state 156
    expr             go to state 157
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 209

   65 stmt: FOR LPAREN basicType varDefs SEMICOLON cond . SEMICOLON expr RPAREN stmt_

    SEMICOLON  shift, and go to state 213


State 210

   66 stmt: FOR LPAREN expr SEMICOLON cond SEMICOLON . expr RPAREN stmt_

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 214
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 211

   57 stmt_: LBRACE blockItems RBRACE .

    $default  reduce using rule 57 (stmt_)


State 212

   62 stmt: IF LPAREN cond RPAREN stmt_ ELSE stmt_ .

    $default  reduce using rule 62 (stmt)


State 213

   65 stmt: FOR LPAREN basicType varDefs SEMICOLON cond SEMICOLON . expr RPAREN stmt_

    ADDR        shift, and go to state 43
    LPAREN      shift, and go to state 44
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    expr             go to state 215
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 214

   66 stmt: FOR LPAREN expr SEMICOLON cond SEMICOLON expr . RPAREN stmt_

    RPAREN  shift, and go to state 216


State 215

   65 stmt: FOR LPAREN basicType varDefs SEMICOLON cond SEMICOLON expr . RPAREN stmt_

    RPAREN  shift, and go to state 217


State 216

   66 stmt: FOR LPAREN expr SEMICOLON cond SEMICOLON expr RPAREN . stmt_

    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 139
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 201
    IF_         shift, and go to state 141
    WHILE_      shift, and go to state 142
    FOR_        shift, and go to state 143
    BREAK       shift, and go to state 144
    CONTINUE    shift, and go to state 145
    RETURN      shift, and go to state 146
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    block            go to state 149
    blockLBRACE      go to state 150
    stmt_            go to state 218
    stmt             go to state 203
    IF               go to state 154
    WHILE            go to state 155
    FOR              go to state 156
    expr             go to state 157
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 217

   65 stmt: FOR LPAREN basicType varDefs SEMICOLON cond SEMICOLON expr RPAREN . stmt_

    ADDR        shift, and go to state 43
    SEMICOLON   shift, and go to state 139
    LPAREN      shift, and go to state 44
    LBRACE      shift, and go to state 201
    IF_         shift, and go to state 141
    WHILE_      shift, and go to state 142
    FOR_        shift, and go to state 143
    BREAK       shift, and go to state 144
    CONTINUE    shift, and go to state 145
    RETURN      shift, and go to state 146
    PLUS        shift, and go to state 45
    MINUS       shift, and go to state 46
    MUL         shift, and go to state 47
    NOT         shift, and go to state 48
    IDENTIFIER  shift, and go to state 49
    INTEGER     shift, and go to state 50
    CHAR        shift, and go to state 51
    BOOL        shift, and go to state 52
    STRING      shift, and go to state 53

    literalConst     go to state 54
    compIdentifier   go to state 55
    pIdentifier      go to state 56
    arrayIdentifier  go to state 57
    identifier       go to state 58
    block            go to state 149
    blockLBRACE      go to state 150
    stmt_            go to state 219
    stmt             go to state 203
    IF               go to state 154
    WHILE            go to state 155
    FOR              go to state 156
    expr             go to state 157
    addExpr          go to state 60
    mulExpr          go to state 61
    unaryExpr        go to state 62
    primaryExpr      go to state 63


State 218

   66 stmt: FOR LPAREN expr SEMICOLON cond SEMICOLON expr RPAREN stmt_ .

    $default  reduce using rule 66 (stmt)


State 219

   65 stmt: FOR LPAREN basicType varDefs SEMICOLON cond SEMICOLON expr RPAREN stmt_ .

    $default  reduce using rule 65 (stmt)
